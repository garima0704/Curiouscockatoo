{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\CuriousCockatoo\\\\client\\\\src\\\\components\\\\Converter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport RealWorldBox from \"./RealWorldBox\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseScientific(val) {\n  if (val == null) return null;\n  if (typeof val === \"number\") return val;\n  if (typeof val === \"object\" && \"value\" in val) return val.value;\n  const num = parseFloat(val);\n  return isNaN(num) ? null : num;\n}\nexport default function Converter({\n  categoryId\n}) {\n  _s();\n  const [units, setUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [convertedValues, setConvertedValues] = useState([]);\n  const [comparisonResults, setComparisonResults] = useState([null, null, null]);\n  const [selectedItems, setSelectedItems] = useState([null, null, null]);\n  const [displayMode, setDisplayMode] = useState([\"general\", \"general\", \"general\"]);\n  const [comparisonMode, setComparisonMode] = useState([\"general\", \"general\", \"general\"]);\n  const theme = useTheme();\n  useEffect(() => {\n    if (!categoryId) return;\n    const fetchData = async () => {\n      const unitRecords = await pb.collection(\"units\").getFullList({\n        filter: `category = \"${categoryId}\"`\n      });\n      const itemRecords = await pb.collection(\"real_world_data\").getFullList({\n        filter: `category = \"${categoryId}\"`\n      });\n      setUnits(unitRecords);\n      setRealWorldItems(itemRecords);\n      setSelectedUnit(unitRecords[0]);\n      setSelectedItems([itemRecords[0], itemRecords[1], itemRecords[2]]);\n    };\n    fetchData();\n  }, [categoryId]);\n  useEffect(() => {\n    if (!inputValue || !selectedUnit || units.length === 0) {\n      setConvertedValues([]);\n      return;\n    }\n    const inputBaseValue = parseScientific(inputValue) * parseScientific(selectedUnit.to_base_factor);\n    const conversions = units.map(unit => {\n      const converted = inputBaseValue / parseScientific(unit.to_base_factor);\n      return {\n        unit,\n        value: converted\n      };\n    });\n    setConvertedValues(conversions);\n  }, [inputValue, selectedUnit, units]);\n  useEffect(() => {\n    const newComparisons = selectedItems.map((item, index) => {\n      if (!item || !item.approx_value || !inputValue || !selectedUnit) return null;\n      const baseValue = parseScientific(inputValue) * parseScientific(selectedUnit.to_base_factor);\n      const comparison = baseValue / parseScientific(item.approx_value);\n      return comparison;\n    });\n    setComparisonResults(newComparisons);\n  }, [inputValue, selectedUnit, selectedItems]);\n  const handleComparisonSelect = (index, item) => {\n    const newItems = [...selectedItems];\n    newItems[index] = item;\n    setSelectedItems(newItems);\n  };\n  if (!categoryId || !units || !selectedUnit) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 bg-white p-4 rounded-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-1 flex flex-col gap-2 bg-gray-100 p-4 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter value\",\n        className: \"p-2 border rounded\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: selectedUnit === null || selectedUnit === void 0 ? void 0 : selectedUnit.id,\n        onChange: e => {\n          const newUnit = units.find(u => u.id === e.target.value);\n          setSelectedUnit(newUnit);\n        },\n        children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: unit.id,\n          children: unit.name\n        }, unit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(i => {\n      var _convertedValues$i, _convertedValues$i$un, _convertedValues$i2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-4 rounded-xl flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-lg\",\n            children: [\"Conversion \", i + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newMode = [...displayMode];\n                newMode[i] = \"general\";\n                setDisplayMode(newMode);\n              },\n              className: `px-2 py-1 rounded text-sm ${displayMode[i] === \"general\" ? \"bg-yellow-400 text-black\" : \"bg-white border\"}`,\n              children: \"General\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newMode = [...displayMode];\n                newMode[i] = \"scientific\";\n                setDisplayMode(newMode);\n              },\n              className: `px-2 py-1 rounded text-sm ${displayMode[i] === \"scientific\" ? \"bg-yellow-400 text-black\" : \"bg-white border\"}`,\n              children: \"Scientific\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"p-2 border rounded\",\n          value: ((_convertedValues$i = convertedValues[i]) === null || _convertedValues$i === void 0 ? void 0 : (_convertedValues$i$un = _convertedValues$i.unit) === null || _convertedValues$i$un === void 0 ? void 0 : _convertedValues$i$un.id) || \"\",\n          onChange: e => {\n            const newUnit = units.find(u => u.id === e.target.value);\n            const updated = [...convertedValues];\n            updated[i] = {\n              unit: newUnit,\n              value: parseScientific(inputValue) * parseScientific(selectedUnit.to_base_factor) / parseScientific(newUnit.to_base_factor)\n            };\n            setConvertedValues(updated);\n          },\n          children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit.id,\n            children: unit.name\n          }, unit.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold\",\n          children: ((_convertedValues$i2 = convertedValues[i]) === null || _convertedValues$i2 === void 0 ? void 0 : _convertedValues$i2.value) != null ? displayMode[i] === \"scientific\" ? parseScientific(convertedValues[i].value).toExponential(3) : parseScientific(convertedValues[i].value).toLocaleString() : \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    }), [0, 1, 2].map(i => {\n      var _selectedItems$i, _selectedItems$i2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-4 rounded-xl flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-lg\",\n            children: [\"Real-World Comparison \", i + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newMode = [...comparisonMode];\n                newMode[i] = \"general\";\n                setComparisonMode(newMode);\n              },\n              className: `px-2 py-1 rounded text-sm ${comparisonMode[i] === \"general\" ? \"bg-yellow-400 text-black\" : \"bg-white border\"}`,\n              children: \"General\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newMode = [...comparisonMode];\n                newMode[i] = \"scientific\";\n                setComparisonMode(newMode);\n              },\n              className: `px-2 py-1 rounded text-sm ${comparisonMode[i] === \"scientific\" ? \"bg-yellow-400 text-black\" : \"bg-white border\"}`,\n              children: \"Scientific\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"p-2 border rounded\",\n          value: (_selectedItems$i = selectedItems[i]) === null || _selectedItems$i === void 0 ? void 0 : _selectedItems$i.id,\n          onChange: e => {\n            const newItem = realWorldItems.find(item => item.id === e.target.value);\n            handleComparisonSelect(i, newItem);\n          },\n          children: realWorldItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold\",\n          children: comparisonResults[i] != null ? comparisonMode[i] === \"scientific\" ? parseScientific(comparisonResults[i]).toExponential(3) : parseScientific(comparisonResults[i]).toLocaleString() : \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: (_selectedItems$i2 = selectedItems[i]) === null || _selectedItems$i2 === void 0 ? void 0 : _selectedItems$i2.note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Converter, \"To4tAKqxaC/hyLWrqrzDu/jfp5I=\", false, function () {\n  return [useTheme];\n});\n_c = Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useEffect","useState","pb","RealWorldBox","useTheme","jsxDEV","_jsxDEV","parseScientific","val","value","num","parseFloat","isNaN","Converter","categoryId","_s","units","setUnits","realWorldItems","setRealWorldItems","inputValue","setInputValue","selectedUnit","setSelectedUnit","convertedValues","setConvertedValues","comparisonResults","setComparisonResults","selectedItems","setSelectedItems","displayMode","setDisplayMode","comparisonMode","setComparisonMode","theme","fetchData","unitRecords","collection","getFullList","filter","itemRecords","length","inputBaseValue","to_base_factor","conversions","map","unit","converted","newComparisons","item","index","approx_value","baseValue","comparison","handleComparisonSelect","newItems","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","newUnit","find","u","name","i","_convertedValues$i","_convertedValues$i$un","_convertedValues$i2","onClick","newMode","updated","toExponential","toLocaleString","_selectedItems$i","_selectedItems$i2","newItem","note","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/CuriousCockatoo/client/src/components/Converter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport RealWorldBox from \"./RealWorldBox\";\nimport { useTheme } from \"../context/ThemeContext\";\n\nfunction parseScientific(val) {\n  if (val == null) return null;\n  if (typeof val === \"number\") return val;\n  if (typeof val === \"object\" && \"value\" in val) return val.value;\n  const num = parseFloat(val);\n  return isNaN(num) ? null : num;\n}\n\nexport default function Converter({ categoryId }) {\n  const [units, setUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [convertedValues, setConvertedValues] = useState([]);\n  const [comparisonResults, setComparisonResults] = useState([null, null, null]);\n  const [selectedItems, setSelectedItems] = useState([null, null, null]);\n  const [displayMode, setDisplayMode] = useState([\"general\", \"general\", \"general\"]);\n  const [comparisonMode, setComparisonMode] = useState([\"general\", \"general\", \"general\"]);\n\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (!categoryId) return;\n\n    const fetchData = async () => {\n      const unitRecords = await pb.collection(\"units\").getFullList({ filter: `category = \"${categoryId}\"` });\n      const itemRecords = await pb.collection(\"real_world_data\").getFullList({ filter: `category = \"${categoryId}\"` });\n\n      setUnits(unitRecords);\n      setRealWorldItems(itemRecords);\n      setSelectedUnit(unitRecords[0]);\n      setSelectedItems([itemRecords[0], itemRecords[1], itemRecords[2]]);\n    };\n\n    fetchData();\n  }, [categoryId]);\n\n  useEffect(() => {\n    if (!inputValue || !selectedUnit || units.length === 0) {\n      setConvertedValues([]);\n      return;\n    }\n\n    const inputBaseValue = parseScientific(inputValue) * parseScientific(selectedUnit.to_base_factor);\n    const conversions = units.map((unit) => {\n      const converted = inputBaseValue / parseScientific(unit.to_base_factor);\n      return { unit, value: converted };\n    });\n\n    setConvertedValues(conversions);\n  }, [inputValue, selectedUnit, units]);\n\n  useEffect(() => {\n    const newComparisons = selectedItems.map((item, index) => {\n      if (!item || !item.approx_value || !inputValue || !selectedUnit) return null;\n\n      const baseValue = parseScientific(inputValue) * parseScientific(selectedUnit.to_base_factor);\n      const comparison = baseValue / parseScientific(item.approx_value);\n\n      return comparison;\n    });\n\n    setComparisonResults(newComparisons);\n  }, [inputValue, selectedUnit, selectedItems]);\n\n  const handleComparisonSelect = (index, item) => {\n    const newItems = [...selectedItems];\n    newItems[index] = item;\n    setSelectedItems(newItems);\n  };\n\n  if (!categoryId || !units || !selectedUnit) return null;\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 bg-white p-4 rounded-xl\">\n      {/* Input Section */}\n      <div className=\"col-span-1 flex flex-col gap-2 bg-gray-100 p-4 rounded-xl\">\n        <input\n          type=\"number\"\n          placeholder=\"Enter value\"\n          className=\"p-2 border rounded\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <select\n          className=\"p-2 border rounded\"\n          value={selectedUnit?.id}\n          onChange={(e) => {\n            const newUnit = units.find((u) => u.id === e.target.value);\n            setSelectedUnit(newUnit);\n          }}\n        >\n          {units.map((unit) => (\n            <option key={unit.id} value={unit.id}>\n              {unit.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Conversion Boxes */}\n      {[0, 1, 2].map((i) => (\n        <div key={i} className=\"bg-gray-100 p-4 rounded-xl flex flex-col gap-2\">\n          <div className=\"flex justify-between\">\n            <span className=\"font-semibold text-lg\">Conversion {i + 1}</span>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => {\n                  const newMode = [...displayMode];\n                  newMode[i] = \"general\";\n                  setDisplayMode(newMode);\n                }}\n                className={`px-2 py-1 rounded text-sm ${\n                  displayMode[i] === \"general\"\n                    ? \"bg-yellow-400 text-black\"\n                    : \"bg-white border\"\n                }`}\n              >\n                General\n              </button>\n              <button\n                onClick={() => {\n                  const newMode = [...displayMode];\n                  newMode[i] = \"scientific\";\n                  setDisplayMode(newMode);\n                }}\n                className={`px-2 py-1 rounded text-sm ${\n                  displayMode[i] === \"scientific\"\n                    ? \"bg-yellow-400 text-black\"\n                    : \"bg-white border\"\n                }`}\n              >\n                Scientific\n              </button>\n            </div>\n          </div>\n          <select\n            className=\"p-2 border rounded\"\n            value={convertedValues[i]?.unit?.id || \"\"}\n            onChange={(e) => {\n              const newUnit = units.find((u) => u.id === e.target.value);\n              const updated = [...convertedValues];\n              updated[i] = {\n                unit: newUnit,\n                value:\n                  (parseScientific(inputValue) * parseScientific(selectedUnit.to_base_factor)) /\n                  parseScientific(newUnit.to_base_factor),\n              };\n              setConvertedValues(updated);\n            }}\n          >\n            {units.map((unit) => (\n              <option key={unit.id} value={unit.id}>\n                {unit.name}\n              </option>\n            ))}\n          </select>\n          <div className=\"text-xl font-bold\">\n            {convertedValues[i]?.value != null\n              ? displayMode[i] === \"scientific\"\n                ? parseScientific(convertedValues[i].value).toExponential(3)\n                : parseScientific(convertedValues[i].value).toLocaleString()\n              : \"-\"}\n          </div>\n        </div>\n      ))}\n\n      {/* Real World Comparison Boxes */}\n      {[0, 1, 2].map((i) => (\n        <div key={i} className=\"bg-gray-100 p-4 rounded-xl flex flex-col gap-2\">\n          <div className=\"flex justify-between\">\n            <span className=\"font-semibold text-lg\">Real-World Comparison {i + 1}</span>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => {\n                  const newMode = [...comparisonMode];\n                  newMode[i] = \"general\";\n                  setComparisonMode(newMode);\n                }}\n                className={`px-2 py-1 rounded text-sm ${\n                  comparisonMode[i] === \"general\"\n                    ? \"bg-yellow-400 text-black\"\n                    : \"bg-white border\"\n                }`}\n              >\n                General\n              </button>\n              <button\n                onClick={() => {\n                  const newMode = [...comparisonMode];\n                  newMode[i] = \"scientific\";\n                  setComparisonMode(newMode);\n                }}\n                className={`px-2 py-1 rounded text-sm ${\n                  comparisonMode[i] === \"scientific\"\n                    ? \"bg-yellow-400 text-black\"\n                    : \"bg-white border\"\n                }`}\n              >\n                Scientific\n              </button>\n            </div>\n          </div>\n\n          <select\n            className=\"p-2 border rounded\"\n            value={selectedItems[i]?.id}\n            onChange={(e) => {\n              const newItem = realWorldItems.find((item) => item.id === e.target.value);\n              handleComparisonSelect(i, newItem);\n            }}\n          >\n            {realWorldItems.map((item) => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n\n          <div className=\"text-xl font-bold\">\n            {comparisonResults[i] != null\n              ? comparisonMode[i] === \"scientific\"\n                ? parseScientific(comparisonResults[i]).toExponential(3)\n                : parseScientific(comparisonResults[i]).toLocaleString()\n              : \"-\"}\n          </div>\n          <div className=\"text-xs text-gray-500\">{selectedItems[i]?.note}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}