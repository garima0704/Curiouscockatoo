{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\VolumeComparisonFinal.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PocketBase from \"pocketbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pb = new PocketBase(\"http://127.0.0.1:8090\");\nconst VolumeComparisonFinal = () => {\n  _s();\n  const [units, setUnits] = useState([]);\n  const [selectedUnitId, setSelectedUnitId] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  useEffect(() => {\n    const fetchUnits = async () => {\n      try {\n        // Step 1: Get Volume category ID dynamically\n        const categoryRes = await pb.collection(\"categories\").getFullList({\n          filter: 'name=\"Volume\"'\n        });\n        if (categoryRes.length === 0) return;\n        const volumeCategoryId = categoryRes[0].id;\n\n        // Step 2: Fetch units based on category ID\n        const unitRes = await pb.collection(\"units\").getFullList({\n          filter: `category=\"${volumeCategoryId}\"`,\n          sort: \"to_base_factor\"\n        });\n        setUnits(unitRes);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n    fetchUnits();\n  }, []);\n  const handleConvert = () => {\n    const baseUnit = units.find(u => u.id === selectedUnitId);\n    if (!baseUnit) return;\n    return units.map(u => {\n      const baseFactor = baseUnit.to_base_factor;\n      const targetFactor = u.to_base_factor;\n      const result = inputValue * baseFactor / targetFactor;\n      return {\n        ...u,\n        converted: result\n      };\n    });\n  };\n  const results = handleConvert();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Volume Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Enter value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Select from unit:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedUnitId(e.target.value),\n        value: selectedUnitId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: unit.id,\n          children: [unit.name, \" (\", unit.symbol, \")\"]\n        }, unit.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Convert To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), results && results.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [u.name, \" (\", u.symbol, \") = \", u.converted]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(VolumeComparisonFinal, \"SGxpFWolU0qS2mO4rfuOf3nfHD8=\");\n_c = VolumeComparisonFinal;\nexport default VolumeComparisonFinal;\nvar _c;\n$RefreshReg$(_c, \"VolumeComparisonFinal\");","map":{"version":3,"names":["useEffect","useState","PocketBase","jsxDEV","_jsxDEV","pb","VolumeComparisonFinal","_s","units","setUnits","selectedUnitId","setSelectedUnitId","inputValue","setInputValue","fetchUnits","categoryRes","collection","getFullList","filter","length","volumeCategoryId","id","unitRes","sort","err","console","error","handleConvert","baseUnit","find","u","map","baseFactor","to_base_factor","targetFactor","result","converted","results","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","unit","name","symbol","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/VolumeComparisonFinal.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport PocketBase from \"pocketbase\";\n\nconst pb = new PocketBase(\"http://127.0.0.1:8090\");\n\nconst VolumeComparisonFinal = () => {\n  const [units, setUnits] = useState([]);\n  const [selectedUnitId, setSelectedUnitId] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  useEffect(() => {\n    const fetchUnits = async () => {\n      try {\n        // Step 1: Get Volume category ID dynamically\n        const categoryRes = await pb.collection(\"categories\").getFullList({\n          filter: 'name=\"Volume\"',\n        });\n\n        if (categoryRes.length === 0) return;\n\n        const volumeCategoryId = categoryRes[0].id;\n\n        // Step 2: Fetch units based on category ID\n        const unitRes = await pb.collection(\"units\").getFullList({\n          filter: `category=\"${volumeCategoryId}\"`,\n          sort: \"to_base_factor\",\n        });\n\n        setUnits(unitRes);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    fetchUnits();\n  }, []);\n\n  const handleConvert = () => {\n    const baseUnit = units.find((u) => u.id === selectedUnitId);\n    if (!baseUnit) return;\n\n    return units.map((u) => {\n      const baseFactor = baseUnit.to_base_factor;\n      const targetFactor = u.to_base_factor;\n      const result = (inputValue * baseFactor) / targetFactor;\n      return { ...u, converted: result };\n    });\n  };\n\n  const results = handleConvert();\n\n  return (\n    <div>\n      <h2>Volume Converter</h2>\n      <div>\n        Enter value:\n        <input\n          type=\"number\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n      </div>\n      <div>\n        Select from unit:\n        <select onChange={(e) => setSelectedUnitId(e.target.value)} value={selectedUnitId}>\n          <option value=\"\">--Select--</option>\n          {units.map((unit) => (\n            <option key={unit.id} value={unit.id}>\n              {unit.name} ({unit.symbol})\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <h4>Convert To</h4>\n        {results &&\n          results.map((u) => (\n            <div key={u.id}>\n              {u.name} ({u.symbol}) = {u.converted}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VolumeComparisonFinal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}