{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\Converter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport RealWorldBox from \"./RealWorldBox\";\nimport { formatNumber } from \"../utils/formatNumber\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction parseScientific(value) {\n  if (!value || typeof value !== \"string\") return Infinity;\n  try {\n    return Number(value);\n  } catch {\n    return Infinity;\n  }\n}\nfunction Converter({\n  categoryId\n}) {\n  _s();\n  const [units, setUnits] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"\");\n  const [selectedUnits, setSelectedUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([null, null, null]);\n  const [comparisonToggles, setComparisonToggles] = useState([false, false, false]);\n  const [conversionToggles, setConversionToggles] = useState([false, false, false]);\n  const [categoryInfo, setCategoryInfo] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _sorted$;\n        const unitList = await pb.collection(\"units\").getFullList({\n          filter: `category = \"${categoryId}\"`\n        });\n        const sorted = unitList.sort((a, b) => a.to_base_factor - b.to_base_factor);\n        setUnits(sorted);\n        setFromUnit(((_sorted$ = sorted[0]) === null || _sorted$ === void 0 ? void 0 : _sorted$.id) || \"\");\n        setSelectedUnits(sorted.slice(1, 4).map(u => u.id));\n        const category = await pb.collection(\"categories\").getOne(categoryId);\n        setCategoryInfo(category);\n        const realItems = await pb.collection(\"realworld_items\").getFullList({\n          filter: `category = \"${categoryId}\"`,\n          expand: \"unit\"\n        });\n        const sortedItems = realItems.sort((a, b) => {\n          var _a$expression, _b$expression;\n          const isAInfinite = (_a$expression = a.expression) === null || _a$expression === void 0 ? void 0 : _a$expression.includes(\"infin\");\n          const isBInfinite = (_b$expression = b.expression) === null || _b$expression === void 0 ? void 0 : _b$expression.includes(\"infin\");\n          if (isAInfinite && !isBInfinite) return 1;\n          if (!isAInfinite && isBInfinite) return -1;\n          if (isAInfinite && isBInfinite) return 0;\n          const aVal = parseScientific(a.scientific_value);\n          const bVal = parseScientific(b.scientific_value);\n          return aVal - bVal;\n        });\n        setRealWorldItems(sortedItems);\n        setSelectedItems([sortedItems[0] || null, sortedItems[1] || null, sortedItems[2] || null]);\n      } catch (err) {\n        console.error(\"Fetch error:\", err);\n      }\n    };\n    if (categoryId) fetchData();\n  }, [categoryId]);\n  const getConvertedValue = toUnitId => {\n    const from = units.find(u => u.id === fromUnit);\n    const to = units.find(u => u.id === toUnitId);\n    if (!from || !to || !inputValue) return null;\n    const baseValue = parseFloat(inputValue) * from.to_base_factor;\n    return baseValue / to.to_base_factor;\n  };\n  const getComparisonValue = item => {\n    const from = units.find(u => u.id === fromUnit);\n    const approx = item === null || item === void 0 ? void 0 : item.approx_value;\n    if (!from || !approx || !inputValue) return null;\n    const baseValue = parseFloat(inputValue) * from.to_base_factor;\n    return baseValue / approx;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-10\",\n    children: [(categoryInfo === null || categoryInfo === void 0 ? void 0 : categoryInfo.top_notes) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-100 border-l-4 border-yellow-500 p-4 rounded text-sm text-gray-800 mb-6\",\n      dangerouslySetInnerHTML: {\n        __html: categoryInfo.top_notes\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-64 flex flex-col items-center justify-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-semibold text-lg\",\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"Enter value\",\n          className: \"border p-2 rounded w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded max-h-40 overflow-y-auto w-full text-sm space-y-1\",\n          children: units.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cursor-pointer p-1 rounded hover:bg-blue-100 ${fromUnit === u.id ? \"bg-blue-200 font-medium\" : \"\"}`,\n            onClick: () => setFromUnit(u.id),\n            children: [u.name, \" (\", u.symbol, \")\"]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 space-y-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-xl font-bold text-gray-700 mb-2\",\n            children: \"Conversion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n            children: selectedUnits.map((toUnitId, index) => {\n              const currentUnit = units.find(u => u.id === toUnitId);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white p-4 rounded shadow flex flex-col gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `px-3 py-1 rounded-l ${!conversionToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                    onClick: () => setConversionToggles(prev => prev.map((t, i) => i === index ? false : t)),\n                    children: \"General\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `px-3 py-1 rounded-r ${conversionToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                    onClick: () => setConversionToggles(prev => prev.map((t, i) => i === index ? true : t)),\n                    children: \"Scientific\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-100 p-3 rounded text-center text-blue-700 font-bold text-base min-h-[48px]\",\n                  children: [formatNumber(getConvertedValue(toUnitId), conversionToggles[index]), \" \", \" \", (currentUnit === null || currentUnit === void 0 ? void 0 : currentUnit.symbol) || \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-xl font-bold text-gray-700 mb-2\",\n            children: \"Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n            children: selectedItems.map((selectedItem, index) => {\n              var _selectedItem$express, _selectedItem$expand, _selectedItem$expand$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white p-4 rounded shadow flex flex-col gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `px-3 py-1 rounded-l ${!comparisonToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                    onClick: () => setComparisonToggles(prev => prev.map((t, i) => i === index ? false : t)),\n                    children: \"General\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `px-3 py-1 rounded-r ${comparisonToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                    onClick: () => setComparisonToggles(prev => prev.map((t, i) => i === index ? true : t)),\n                    children: \"Scientific\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-100 p-3 rounded text-center text-blue-700 font-bold text-base min-h-[48px]\",\n                  children: selectedItem && inputValue ? (_selectedItem$express = selectedItem.expression) !== null && _selectedItem$express !== void 0 && _selectedItem$express.includes(\"infin\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"Infinite\"\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [formatNumber(getComparisonValue(selectedItem), comparisonToggles[index]), \" \", (selectedItem === null || selectedItem === void 0 ? void 0 : (_selectedItem$expand = selectedItem.expand) === null || _selectedItem$expand === void 0 ? void 0 : (_selectedItem$expand$ = _selectedItem$expand.unit) === null || _selectedItem$expand$ === void 0 ? void 0 : _selectedItem$expand$.symbol) || \"\"]\n                  }, void 0, true) : \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RealWorldBox, {\n                  selected: selectedItem,\n                  setSelected: val => setSelectedItems(prev => prev.map((item, i) => i === index ? val : item)),\n                  items: realWorldItems,\n                  scientificToggle: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Converter, \"hnUHiVCl81mBTFNOSSHlI6IYVqM=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useEffect","useState","pb","RealWorldBox","formatNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","parseScientific","value","Infinity","Number","Converter","categoryId","_s","units","setUnits","inputValue","setInputValue","fromUnit","setFromUnit","selectedUnits","setSelectedUnits","realWorldItems","setRealWorldItems","selectedItems","setSelectedItems","comparisonToggles","setComparisonToggles","conversionToggles","setConversionToggles","categoryInfo","setCategoryInfo","fetchData","_sorted$","unitList","collection","getFullList","filter","sorted","sort","a","b","to_base_factor","id","slice","map","u","category","getOne","realItems","expand","sortedItems","_a$expression","_b$expression","isAInfinite","expression","includes","isBInfinite","aVal","scientific_value","bVal","err","console","error","getConvertedValue","toUnitId","from","find","to","baseValue","parseFloat","getComparisonValue","item","approx","approx_value","className","children","top_notes","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","name","symbol","index","currentUnit","prev","t","i","selectedItem","_selectedItem$express","_selectedItem$expand","_selectedItem$expand$","unit","selected","setSelected","val","items","scientificToggle","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/Converter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport RealWorldBox from \"./RealWorldBox\";\nimport { formatNumber } from \"../utils/formatNumber\";\n\nfunction parseScientific(value) {\n  if (!value || typeof value !== \"string\") return Infinity;\n  try {\n    return Number(value);\n  } catch {\n    return Infinity;\n  }\n}\n\nfunction Converter({ categoryId }) {\n  const [units, setUnits] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"\");\n  const [selectedUnits, setSelectedUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([null, null, null]);\n  const [comparisonToggles, setComparisonToggles] = useState([false, false, false]);\n  const [conversionToggles, setConversionToggles] = useState([false, false, false]);\n  const [categoryInfo, setCategoryInfo] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const unitList = await pb.collection(\"units\").getFullList({\n          filter: `category = \"${categoryId}\"`,\n        });\n        const sorted = unitList.sort((a, b) => a.to_base_factor - b.to_base_factor);\n        setUnits(sorted);\n        setFromUnit(sorted[0]?.id || \"\");\n        setSelectedUnits(sorted.slice(1, 4).map((u) => u.id));\n\n        const category = await pb.collection(\"categories\").getOne(categoryId);\n        setCategoryInfo(category);\n\n        const realItems = await pb.collection(\"realworld_items\").getFullList({\n          filter: `category = \"${categoryId}\"`,\n          expand: \"unit\",\n        });\n\n        const sortedItems = realItems.sort((a, b) => {\n          const isAInfinite = a.expression?.includes(\"infin\");\n          const isBInfinite = b.expression?.includes(\"infin\");\n\n          if (isAInfinite && !isBInfinite) return 1;\n          if (!isAInfinite && isBInfinite) return -1;\n          if (isAInfinite && isBInfinite) return 0;\n\n          const aVal = parseScientific(a.scientific_value);\n          const bVal = parseScientific(b.scientific_value);\n\n          return aVal - bVal;\n        });\n\n        setRealWorldItems(sortedItems);\n        setSelectedItems([\n          sortedItems[0] || null,\n          sortedItems[1] || null,\n          sortedItems[2] || null,\n        ]);\n      } catch (err) {\n        console.error(\"Fetch error:\", err);\n      }\n    };\n\n    if (categoryId) fetchData();\n  }, [categoryId]);\n\n  const getConvertedValue = (toUnitId) => {\n    const from = units.find((u) => u.id === fromUnit);\n    const to = units.find((u) => u.id === toUnitId);\n    if (!from || !to || !inputValue) return null;\n    const baseValue = parseFloat(inputValue) * from.to_base_factor;\n    return baseValue / to.to_base_factor;\n  };\n\n  const getComparisonValue = (item) => {\n    const from = units.find((u) => u.id === fromUnit);\n    const approx = item?.approx_value;\n    if (!from || !approx || !inputValue) return null;\n    const baseValue = parseFloat(inputValue) * from.to_base_factor;\n    return baseValue / approx;\n  };\n\n  return (\n    <div className=\"space-y-10\">\n      {categoryInfo?.top_notes && (\n        <div\n          className=\"bg-yellow-100 border-l-4 border-yellow-500 p-4 rounded text-sm text-gray-800 mb-6\"\n          dangerouslySetInnerHTML={{ __html: categoryInfo.top_notes }}\n        />\n      )}\n\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* From Block */}\n        <div className=\"w-full lg:w-64 flex flex-col items-center justify-center gap-4\">\n          <label className=\"font-semibold text-lg\">From</label>\n          <input\n            type=\"number\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            placeholder=\"Enter value\"\n            className=\"border p-2 rounded w-full\"\n          />\n          <div className=\"border rounded max-h-40 overflow-y-auto w-full text-sm space-y-1\">\n            {units.map((u) => (\n              <div\n                key={u.id}\n                className={`cursor-pointer p-1 rounded hover:bg-blue-100 ${\n                  fromUnit === u.id ? \"bg-blue-200 font-medium\" : \"\"\n                }`}\n                onClick={() => setFromUnit(u.id)}\n              >\n                {u.name} ({u.symbol})\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Right Section */}\n        <div className=\"flex-1 space-y-10\">\n          {/* Conversion Section */}\n          <div>\n            <div className=\"text-center text-xl font-bold text-gray-700 mb-2\">Conversion</div>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {selectedUnits.map((toUnitId, index) => {\n                const currentUnit = units.find((u) => u.id === toUnitId);\n                return (\n                  <div key={index} className=\"bg-white p-4 rounded shadow flex flex-col gap-3\">\n                    <div className=\"flex justify-center gap-2\">\n                      <button\n                        className={`px-3 py-1 rounded-l ${\n                          !conversionToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"\n                        }`}\n                        onClick={() =>\n                          setConversionToggles((prev) =>\n                            prev.map((t, i) => (i === index ? false : t))\n                          )\n                        }\n                      >\n                        General\n                      </button>\n                      <button\n                        className={`px-3 py-1 rounded-r ${\n                          conversionToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"\n                        }`}\n                        onClick={() =>\n                          setConversionToggles((prev) =>\n                            prev.map((t, i) => (i === index ? true : t))\n                          )\n                        }\n                      >\n                        Scientific\n                      </button>\n                    </div>\n                    <div className=\"bg-gray-100 p-3 rounded text-center text-blue-700 font-bold text-base min-h-[48px]\">\n                      {formatNumber(getConvertedValue(toUnitId), conversionToggles[index])} {\" \"}\n                      {currentUnit?.symbol || \"\"}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Comparison Section */}\n          <div>\n            <div className=\"text-center text-xl font-bold text-gray-700 mb-2\">Comparison</div>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {selectedItems.map((selectedItem, index) => (\n                <div key={index} className=\"bg-white p-4 rounded shadow flex flex-col gap-3\">\n                  <div className=\"flex justify-center gap-2\">\n                    <button\n                      className={`px-3 py-1 rounded-l ${\n                        !comparisonToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"\n                      }`}\n                      onClick={() =>\n                        setComparisonToggles((prev) =>\n                          prev.map((t, i) => (i === index ? false : t))\n                        )\n                      }\n                    >\n                      General\n                    </button>\n                    <button\n                      className={`px-3 py-1 rounded-r ${\n                        comparisonToggles[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"\n                      }`}\n                      onClick={() =>\n                        setComparisonToggles((prev) =>\n                          prev.map((t, i) => (i === index ? true : t))\n                        )\n                      }\n                    >\n                      Scientific\n                    </button>\n                  </div>\n                  <div className=\"bg-gray-100 p-3 rounded text-center text-blue-700 font-bold text-base min-h-[48px]\">\n                    {selectedItem && inputValue ? (\n                      selectedItem.expression?.includes(\"infin\") ? (\n                        <>Infinite</>\n                      ) : (\n                        <>\n                          {formatNumber(\n                            getComparisonValue(selectedItem),\n                            comparisonToggles[index]\n                          )} {selectedItem?.expand?.unit?.symbol || \"\"}\n                        </>\n                      )\n                    ) : (\n                      \"...\"\n                    )}\n                  </div>\n                  <RealWorldBox\n                    selected={selectedItem}\n                    setSelected={(val) =>\n                      setSelectedItems((prev) => prev.map((item, i) => (i === index ? val : item)))\n                    }\n                    items={realWorldItems}\n                    scientificToggle={true}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Converter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}