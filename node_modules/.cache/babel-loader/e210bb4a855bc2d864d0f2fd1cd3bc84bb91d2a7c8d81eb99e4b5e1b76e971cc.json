{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\VolumeComparisonSimple.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = [\"mm³\", \"cm³\", \"mL\", \"in³\", \"pt (US)\", \"qt (US)\", \"L\", \"gal (US)\", \"ft³\", \"yd³\", \"m³\", \"km³\", \"mi³\"];\nfunction ResultColumn({\n  toUnit,\n  setToUnit,\n  fromValue,\n  fromUnit\n}) {\n  _s();\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    if (!fromValue || isNaN(fromValue)) {\n      setResult(null);\n      return;\n    }\n    const fetchResult = async () => {\n      try {\n        var _data$result;\n        const res = await fetch(`http://localhost:5000/api/convert/volume?value=${fromValue}&from=${encodeURIComponent(fromUnit)}&to=${encodeURIComponent(toUnit)}`);\n        const data = await res.json();\n        setResult((_data$result = data.result) !== null && _data$result !== void 0 ? _data$result : \"Error\");\n      } catch {\n        setResult(\"Error\");\n      }\n    };\n    fetchResult();\n  }, [fromValue, fromUnit, toUnit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded p-4 bg-white shadow-sm h-full flex flex-col justify-between\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3 justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border p-2 rounded w-32 text-center\",\n        value: toUnit,\n        onChange: e => setToUnit(e.target.value),\n        children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: unit\n        }, unit, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold text-blue-600\",\n        children: result !== null ? result : \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultColumn, \"otsdU8867Nll1OjDzAJiWNisW5I=\");\n_c = ResultColumn;\nexport default function VolumeComparisonSimple() {\n  _s2();\n  const [fromValue, setFromValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"L\");\n  const [toUnit1, setToUnit1] = useState(\"gal (US)\");\n  const [toUnit2, setToUnit2] = useState(\"m³\");\n  const [toUnit3, setToUnit3] = useState(\"km³\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-6 bg-white rounded-lg shadow mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center mb-6\",\n      children: \"Compare Volume Units\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter value\",\n          value: fromValue,\n          onChange: e => setFromValue(e.target.value),\n          className: \"border p-2 rounded w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromUnit,\n          onChange: e => setFromUnit(e.target.value),\n          className: \"border p-2 rounded w-full\",\n          children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        toUnit: toUnit1,\n        setToUnit: setToUnit1,\n        fromValue: fromValue,\n        fromUnit: fromUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        toUnit: toUnit2,\n        setToUnit: setToUnit2,\n        fromValue: fromValue,\n        fromUnit: fromUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        toUnit: toUnit3,\n        setToUnit: setToUnit3,\n        fromValue: fromValue,\n        fromUnit: fromUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s2(VolumeComparisonSimple, \"lG/deoylWv+VVSwbMhJaIDe7EHQ=\");\n_c2 = VolumeComparisonSimple;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResultColumn\");\n$RefreshReg$(_c2, \"VolumeComparisonSimple\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","units","ResultColumn","toUnit","setToUnit","fromValue","fromUnit","_s","result","setResult","isNaN","fetchResult","_data$result","res","fetch","encodeURIComponent","data","json","className","children","value","onChange","e","target","map","unit","fileName","_jsxFileName","lineNumber","columnNumber","_c","VolumeComparisonSimple","_s2","setFromValue","setFromUnit","toUnit1","setToUnit1","toUnit2","setToUnit2","toUnit3","setToUnit3","type","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/VolumeComparisonSimple.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst units = [\n  \"mm³\", \"cm³\", \"mL\", \"in³\", \"pt (US)\", \"qt (US)\", \"L\", \"gal (US)\",\n  \"ft³\", \"yd³\", \"m³\", \"km³\", \"mi³\"\n];\n\nfunction ResultColumn({ toUnit, setToUnit, fromValue, fromUnit }) {\n  const [result, setResult] = useState(null);\n\n  useEffect(() => {\n    if (!fromValue || isNaN(fromValue)) {\n      setResult(null);\n      return;\n    }\n\n    const fetchResult = async () => {\n      try {\n        const res = await fetch(\n          `http://localhost:5000/api/convert/volume?value=${fromValue}&from=${encodeURIComponent(fromUnit)}&to=${encodeURIComponent(toUnit)}`\n        );\n        const data = await res.json();\n        setResult(data.result ?? \"Error\");\n      } catch {\n        setResult(\"Error\");\n      }\n    };\n\n    fetchResult();\n  }, [fromValue, fromUnit, toUnit]);\n\n  return (\n    <div className=\"border rounded p-4 bg-white shadow-sm h-full flex flex-col justify-between\">\n      <div className=\"flex items-center gap-3 justify-between\">\n        <select\n          className=\"border p-2 rounded w-32 text-center\"\n          value={toUnit}\n          onChange={(e) => setToUnit(e.target.value)}\n        >\n          {units.map((unit) => (\n            <option key={unit}>{unit}</option>\n          ))}\n        </select>\n        <div className=\"text-xl font-bold text-blue-600\">\n          {result !== null ? result : \"...\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function VolumeComparisonSimple() {\n  const [fromValue, setFromValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"L\");\n  const [toUnit1, setToUnit1] = useState(\"gal (US)\");\n  const [toUnit2, setToUnit2] = useState(\"m³\");\n  const [toUnit3, setToUnit3] = useState(\"km³\");\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-white rounded-lg shadow mt-6\">\n      <h2 className=\"text-2xl font-bold text-center mb-6\">Compare Volume Units</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 items-start\">\n        {/* From input block */}\n        <div className=\"space-y-4\">\n          <input\n            type=\"number\"\n            placeholder=\"Enter value\"\n            value={fromValue}\n            onChange={(e) => setFromValue(e.target.value)}\n            className=\"border p-2 rounded w-full\"\n          />\n          <select\n            value={fromUnit}\n            onChange={(e) => setFromUnit(e.target.value)}\n            className=\"border p-2 rounded w-full\"\n          >\n            {units.map((unit) => (\n              <option key={unit}>{unit}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Result Columns */}\n        <ResultColumn\n          toUnit={toUnit1}\n          setToUnit={setToUnit1}\n          fromValue={fromValue}\n          fromUnit={fromUnit}\n        />\n        <ResultColumn\n          toUnit={toUnit2}\n          setToUnit={setToUnit2}\n          fromValue={fromValue}\n          fromUnit={fromUnit}\n        />\n        <ResultColumn\n          toUnit={toUnit3}\n          setToUnit={setToUnit3}\n          fromValue={fromValue}\n          fromUnit={fromUnit}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}