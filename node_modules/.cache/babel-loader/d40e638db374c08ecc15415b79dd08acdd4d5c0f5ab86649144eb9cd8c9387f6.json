{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\CuriousCockatoo\\\\client\\\\src\\\\components\\\\ConversionBox.jsx\";\nimport React from \"react\";\nimport { formatNumber } from \"../utils/formatNumber\";\nimport { parseScientific } from \"../utils/parseScientific\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getConvertedValue(inputValue, fromUnit, toUnit, categoryInfo) {\n  if (!fromUnit || !toUnit) return null;\n  const input = parseScientific(inputValue);\n  if (input == null || isNaN(input)) return null;\n  const fromFactor = parseScientific(fromUnit.to_base_factor);\n  const toFactor = parseScientific(toUnit.to_base_factor);\n  if (!fromFactor || !toFactor) return null;\n  const baseValue = input * fromFactor;\n  const convertedValue = baseValue / toFactor;\n  return convertedValue;\n}\nexport default function ConversionBox({\n  theme,\n  inputValue,\n  fromUnit,\n  units,\n  childUnits,\n  selectedUnits,\n  setSelectedUnits,\n  conversionToggles,\n  setConversionToggles,\n  categoryInfo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl font-bold text-gray-700 mb-2\",\n      children: \"Conversion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: selectedUnits.map((toUnitId, index) => {\n        const currentUnit = childUnits.find(u => u.id === toUnitId);\n        const converted = getConvertedValue(inputValue, fromUnit, currentUnit, categoryInfo);\n        const toggle = conversionToggles[index] || \"general\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 rounded shadow flex flex-col gap-3\",\n          style: {\n            backgroundColor: theme === null || theme === void 0 ? void 0 : theme.box\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 text-sm font-semibold\",\n              children: \"Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `text-xs px-2 py-1 rounded ${toggle === \"general\" ? \"bg-yellow-400 text-white\" : \"bg-gray-200\"}`,\n                onClick: () => {\n                  const updated = [...conversionToggles];\n                  updated[index] = \"general\";\n                  setConversionToggles(updated);\n                },\n                children: \"General\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `text-xs px-2 py-1 rounded ${toggle === \"scientific\" ? \"bg-yellow-400 text-white\" : \"bg-gray-200\"}`,\n                onClick: () => {\n                  const updated = [...conversionToggles];\n                  updated[index] = \"scientific\";\n                  setConversionToggles(updated);\n                },\n                children: \"Scientific\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-gray-800\",\n            children: converted != null ? toggle === \"scientific\" ? converted.toExponential(2) : formatNumber(converted) : \"--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toUnitId,\n            onChange: e => {\n              const updated = [...selectedUnits];\n              updated[index] = e.target.value;\n              setSelectedUnits(updated);\n            },\n            className: \"w-full p-2 rounded border\",\n            children: childUnits.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: unit.id,\n              children: unit.name\n            }, unit.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = ConversionBox;\nvar _c;\n$RefreshReg$(_c, \"ConversionBox\");","map":{"version":3,"names":["React","formatNumber","parseScientific","jsxDEV","_jsxDEV","getConvertedValue","inputValue","fromUnit","toUnit","categoryInfo","input","isNaN","fromFactor","to_base_factor","toFactor","baseValue","convertedValue","ConversionBox","theme","units","childUnits","selectedUnits","setSelectedUnits","conversionToggles","setConversionToggles","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","toUnitId","index","currentUnit","find","u","id","converted","toggle","style","backgroundColor","box","onClick","updated","toExponential","value","onChange","e","target","unit","name","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/CuriousCockatoo/client/src/components/ConversionBox.jsx"],"sourcesContent":["import React from \"react\";\nimport { formatNumber } from \"../utils/formatNumber\";\nimport { parseScientific } from \"../utils/parseScientific\";\n\nfunction getConvertedValue(inputValue, fromUnit, toUnit, categoryInfo) {\n  if (!fromUnit || !toUnit) return null;\n\n  const input = parseScientific(inputValue);\n  if (input == null || isNaN(input)) return null;\n\n  const fromFactor = parseScientific(fromUnit.to_base_factor);\n  const toFactor = parseScientific(toUnit.to_base_factor);\n\n  if (!fromFactor || !toFactor) return null;\n\n  const baseValue = input * fromFactor;\n  const convertedValue = baseValue / toFactor;\n\n  return convertedValue;\n}\n\nexport default function ConversionBox({\n  theme,\n  inputValue,\n  fromUnit,\n  units,\n  childUnits,\n  selectedUnits,\n  setSelectedUnits,\n  conversionToggles,\n  setConversionToggles,\n  categoryInfo,\n}) {\n  return (\n    <div>\n      <div className=\"text-center text-xl font-bold text-gray-700 mb-2\">\n        Conversion\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {selectedUnits.map((toUnitId, index) => {\n          const currentUnit = childUnits.find((u) => u.id === toUnitId);\n          const converted = getConvertedValue(\n            inputValue,\n            fromUnit,\n            currentUnit,\n            categoryInfo\n          );\n          const toggle = conversionToggles[index] || \"general\";\n\n          return (\n            <div\n              key={index}\n              className=\"p-4 rounded shadow flex flex-col gap-3\"\n              style={{ backgroundColor: theme?.box }}\n            >\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-500 text-sm font-semibold\">\n                  Output\n                </span>\n                <div className=\"flex space-x-2\">\n                  <button\n                    className={`text-xs px-2 py-1 rounded ${\n                      toggle === \"general\"\n                        ? \"bg-yellow-400 text-white\"\n                        : \"bg-gray-200\"\n                    }`}\n                    onClick={() => {\n                      const updated = [...conversionToggles];\n                      updated[index] = \"general\";\n                      setConversionToggles(updated);\n                    }}\n                  >\n                    General\n                  </button>\n                  <button\n                    className={`text-xs px-2 py-1 rounded ${\n                      toggle === \"scientific\"\n                        ? \"bg-yellow-400 text-white\"\n                        : \"bg-gray-200\"\n                    }`}\n                    onClick={() => {\n                      const updated = [...conversionToggles];\n                      updated[index] = \"scientific\";\n                      setConversionToggles(updated);\n                    }}\n                  >\n                    Scientific\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"text-2xl font-bold text-gray-800\">\n                {converted != null\n                  ? toggle === \"scientific\"\n                    ? converted.toExponential(2)\n                    : formatNumber(converted)\n                  : \"--\"}\n              </div>\n\n              <select\n                value={toUnitId}\n                onChange={(e) => {\n                  const updated = [...selectedUnits];\n                  updated[index] = e.target.value;\n                  setSelectedUnits(updated);\n                }}\n                className=\"w-full p-2 rounded border\"\n              >\n                {childUnits.map((unit) => (\n                  <option key={unit.id} value={unit.id}>\n                    {unit.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}