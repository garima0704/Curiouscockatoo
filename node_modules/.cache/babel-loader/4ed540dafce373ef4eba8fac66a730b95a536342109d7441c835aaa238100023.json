{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\PhysicalComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst realWorldItems = [{\n  name: \"Hydrogen Atom (electron cloud)\",\n  volume: 6.5e-31\n}, {\n  name: \"Virus (e.g., Influenza)\",\n  volume: 5e-21\n}, {\n  name: \"Red Blood Cell\",\n  volume: 9e-17\n}, {\n  name: \"Human Egg Cell\",\n  volume: 1e-12\n}, {\n  name: \"Water Droplet\",\n  volume: 5e-8\n}, {\n  name: \"Teaspoon\",\n  volume: 5e-6\n}, {\n  name: \"Golf Ball\",\n  volume: 4.1e-5\n}, {\n  name: \"Tennis Ball\",\n  volume: 1.6e-4\n}, {\n  name: \"Coffee Cup\",\n  volume: 2e-4\n}, {\n  name: \"Milk Carton (1L)\",\n  volume: 1e-3\n}, {\n  name: \"Cooking Pot (5L)\",\n  volume: 0.005\n}, {\n  name: \"Pressure Cooker (10L)\",\n  volume: 0.01\n}, {\n  name: \"Standard Oven\",\n  volume: 0.07\n}, {\n  name: \"Refrigerator Interior\",\n  volume: 0.8\n}, {\n  name: \"Car Interior (Compact)\",\n  volume: 4\n}, {\n  name: \"Small Bedroom\",\n  volume: 30\n}, {\n  name: \"Shipping Container (20ft)\",\n  volume: 33\n}, {\n  name: \"Swimming Pool (residential)\",\n  volume: 80\n}, {\n  name: \"Classroom\",\n  volume: 240\n}, {\n  name: \"Olympic Swimming Pool\",\n  volume: 2500\n}, {\n  name: \"Empire State Building\",\n  volume: 1e6\n}, {\n  name: \"Pyramid of Giza\",\n  volume: 2.6e6\n}, {\n  name: \"Mount Everest\",\n  volume: 5.2e13\n}, {\n  name: \"Earth\",\n  volume: 1.083e21\n}, {\n  name: \"Sun\",\n  volume: 1.41e27\n}, {\n  name: \"UY Scuti\",\n  volume: 6.93e36\n}];\nconst formatSci = val => {\n  if (!val || isNaN(val)) return \"-\";\n  return Number(val).toExponential(2).replace(\"e+\", \"×10^\").replace(\"e\", \"×10^\");\n};\nfunction ItemColumn({\n  selected,\n  setSelected,\n  volumeM3\n}) {\n  const item = realWorldItems.find(i => i.name === selected);\n  const result = item ? volumeM3 / item.volume : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded p-4 bg-white shadow-sm flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold text-blue-600 mb-2\",\n      children: item && volumeM3 ? formatSci(result) : \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selected,\n      onChange: e => setSelected(e.target.value),\n      className: \"border p-2 rounded w-full text-sm\",\n      children: realWorldItems.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i.name,\n        children: [i.name, \" \\u2013 \", formatSci(i.volume), \" m\\xB3\"]\n      }, i.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = ItemColumn;\nexport default function PhysicalComparisonFinal({\n  volumeM3\n}) {\n  _s();\n  const [selected1, setSelected1] = useState(\"Hydrogen Atom (electron cloud)\");\n  const [selected2, setSelected2] = useState(\"Milk Carton (1L)\");\n  const [selected3, setSelected3] = useState(\"Olympic Swimming Pool\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-center mb-6\",\n      children: \"Compare with Real-World Objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(ItemColumn, {\n        selected: selected1,\n        setSelected: setSelected1,\n        volumeM3: volumeM3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemColumn, {\n        selected: selected2,\n        setSelected: setSelected2,\n        volumeM3: volumeM3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemColumn, {\n        selected: selected3,\n        setSelected: setSelected3,\n        volumeM3: volumeM3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(PhysicalComparisonFinal, \"2GZ/JH6J8mahdELL1t/7HoUucE8=\");\n_c2 = PhysicalComparisonFinal;\nvar _c, _c2;\n$RefreshReg$(_c, \"ItemColumn\");\n$RefreshReg$(_c2, \"PhysicalComparisonFinal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","realWorldItems","name","volume","formatSci","val","isNaN","Number","toExponential","replace","ItemColumn","selected","setSelected","volumeM3","item","find","i","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","_c","PhysicalComparisonFinal","_s","selected1","setSelected1","selected2","setSelected2","selected3","setSelected3","_c2","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/PhysicalComparison.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst realWorldItems = [\n  { name: \"Hydrogen Atom (electron cloud)\", volume: 6.5e-31 },\n  { name: \"Virus (e.g., Influenza)\", volume: 5e-21 },\n  { name: \"Red Blood Cell\", volume: 9e-17 },\n  { name: \"Human Egg Cell\", volume: 1e-12 },\n  { name: \"Water Droplet\", volume: 5e-8 },\n  { name: \"Teaspoon\", volume: 5e-6 },\n  { name: \"Golf Ball\", volume: 4.1e-5 },\n  { name: \"Tennis Ball\", volume: 1.6e-4 },\n  { name: \"Coffee Cup\", volume: 2e-4 },\n  { name: \"Milk Carton (1L)\", volume: 1e-3 },\n  { name: \"Cooking Pot (5L)\", volume: 0.005 },\n  { name: \"Pressure Cooker (10L)\", volume: 0.01 },\n  { name: \"Standard Oven\", volume: 0.07 },\n  { name: \"Refrigerator Interior\", volume: 0.8 },\n  { name: \"Car Interior (Compact)\", volume: 4 },\n  { name: \"Small Bedroom\", volume: 30 },\n  { name: \"Shipping Container (20ft)\", volume: 33 },\n  { name: \"Swimming Pool (residential)\", volume: 80 },\n  { name: \"Classroom\", volume: 240 },\n  { name: \"Olympic Swimming Pool\", volume: 2500 },\n  { name: \"Empire State Building\", volume: 1e6 },\n  { name: \"Pyramid of Giza\", volume: 2.6e6 },\n  { name: \"Mount Everest\", volume: 5.2e13 },\n  { name: \"Earth\", volume: 1.083e21 },\n  { name: \"Sun\", volume: 1.41e27 },\n  { name: \"UY Scuti\", volume: 6.93e36 }\n];\n\nconst formatSci = (val) => {\n  if (!val || isNaN(val)) return \"-\";\n  return Number(val).toExponential(2).replace(\"e+\", \"×10^\").replace(\"e\", \"×10^\");\n};\n\nfunction ItemColumn({ selected, setSelected, volumeM3 }) {\n  const item = realWorldItems.find((i) => i.name === selected);\n  const result = item ? volumeM3 / item.volume : null;\n\n  return (\n    <div className=\"border rounded p-4 bg-white shadow-sm flex flex-col items-center\">\n      <div className=\"text-xl font-bold text-blue-600 mb-2\">\n        {item && volumeM3 ? formatSci(result) : \"...\"}\n      </div>\n      <select\n        value={selected}\n        onChange={(e) => setSelected(e.target.value)}\n        className=\"border p-2 rounded w-full text-sm\"\n      >\n        {realWorldItems.map((i) => (\n          <option key={i.name} value={i.name}>\n            {i.name} – {formatSci(i.volume)} m³\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default function PhysicalComparisonFinal({ volumeM3 }) {\n  const [selected1, setSelected1] = useState(\"Hydrogen Atom (electron cloud)\");\n  const [selected2, setSelected2] = useState(\"Milk Carton (1L)\");\n  const [selected3, setSelected3] = useState(\"Olympic Swimming Pool\");\n\n  return (\n    <div className=\"mt-12\">\n      <h3 className=\"text-xl font-semibold text-center mb-6\">\n        Compare with Real-World Objects\n      </h3>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <ItemColumn\n          selected={selected1}\n          setSelected={setSelected1}\n          volumeM3={volumeM3}\n        />\n        <ItemColumn\n          selected={selected2}\n          setSelected={setSelected2}\n          volumeM3={volumeM3}\n        />\n        <ItemColumn\n          selected={selected3}\n          setSelected={setSelected3}\n          volumeM3={volumeM3}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}