{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\CuriousCockatoo\\\\client\\\\src\\\\components\\\\Converter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport RealWorldBox from \"./RealWorldBox\";\nimport { formatNumber } from \"../utils/formatNumber\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport MoleConverter from \"./MoleConverter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Converter({\n  categoryId\n}) {\n  _s();\n  var _categoryInfo$name;\n  const [units, setUnits] = useState([]);\n  const [selectedUnits, setSelectedUnits] = useState([]);\n  const [input, setInput] = useState(1);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [categoryInfo, setCategoryInfo] = useState(null);\n  const theme = useTheme();\n  const fromUnit = units[0];\n  useEffect(() => {\n    const fetchCategoryInfo = async () => {\n      const category = await pb.collection(\"categories\").getOne(categoryId);\n      setCategoryInfo(category);\n    };\n    fetchCategoryInfo();\n  }, [categoryId]);\n  useEffect(() => {\n    const fetchUnitsAndItems = async () => {\n      if (!categoryInfo) return;\n\n      // Delegate to MoleConverter if category is Mole\n      if (categoryInfo.name.toLowerCase() === \"mole\") return;\n      const fetchedUnits = await pb.collection(\"units\").getFullList({\n        filter: `category=\"${categoryId}\" && parent_unit = \"\"`\n      });\n      if (fetchedUnits.length === 0) return;\n      const parent = fetchedUnits[0];\n      const [childUnits, items] = await Promise.all([pb.collection(\"units\").getFullList({\n        filter: `parent_unit = \"${parent.id}\"`\n      }), pb.collection(\"realworld_items\").getFullList({\n        filter: `unit.parent_unit = \"${parent.id}\"`,\n        expand: \"unit\"\n      })]);\n      const sortedChildUnits = childUnits.sort((a, b) => a.to_base_factor - b.to_base_factor);\n      const sortedItems = items.sort((a, b) => parseScientific(a.scientific_value) - parseScientific(b.scientific_value));\n      setUnits([parent, ...sortedChildUnits]);\n      setSelectedUnits(sortedChildUnits.slice(0, 3).map(u => u.id));\n      setRealWorldItems(sortedItems);\n      setSelectedItems([sortedItems[0], sortedItems[1], sortedItems[2]]);\n    };\n    fetchUnitsAndItems();\n  }, [categoryId, categoryInfo]);\n  const getConvertedValue = unitId => {\n    const to = units.find(u => u.id === unitId);\n    if (!to) return 0;\n    return input * to.to_base_factor;\n  };\n  const getComparisonValue = itemId => {\n    const item = realWorldItems.find(r => r.id === itemId);\n    const from = units[0];\n    if (!item || !from) return 0;\n    const realValue = input * from.to_base_factor;\n    return realValue / parseScientific(item.scientific_value);\n  };\n  const parseScientific = val => {\n    if (val == null) return null;\n    if (typeof val === \"number\") return val;\n    const parts = val.split(\"×10^\");\n    if (parts.length === 2) {\n      const base = parseFloat(parts[0]);\n      const exponent = parseInt(parts[1], 10);\n      return base * Math.pow(10, exponent);\n    }\n    return parseFloat(val);\n  };\n\n  // Redirect to MoleConverter if this is the Mole category\n  if ((categoryInfo === null || categoryInfo === void 0 ? void 0 : (_categoryInfo$name = categoryInfo.name) === null || _categoryInfo$name === void 0 ? void 0 : _categoryInfo$name.toLowerCase()) === \"mole\") {\n    return /*#__PURE__*/_jsxDEV(MoleConverter, {\n      categoryId: categoryId,\n      input: input,\n      setInput: setInput,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n    children: [selectedUnits.map((unitId, index) => {\n      const unit = units.find(u => u.id === unitId);\n      return /*#__PURE__*/_jsxDEV(ConversionBox, {\n        unit: unit,\n        input: input,\n        onInputChange: setInput,\n        value: getConvertedValue(unitId),\n        theme: theme,\n        units: units,\n        selectedUnits: selectedUnits,\n        setSelectedUnits: setSelectedUnits,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this);\n    }), selectedItems.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(RealWorldBox, {\n        item: item,\n        value: getComparisonValue(item === null || item === void 0 ? void 0 : item.id),\n        input: input,\n        items: realWorldItems,\n        setSelectedItems: setSelectedItems,\n        index: index,\n        theme: theme\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Converter, \"GSdproV8IL8X80/Ma4MHxGipp54=\", false, function () {\n  return [useTheme];\n});\n_c = Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useEffect","useState","pb","RealWorldBox","formatNumber","useTheme","MoleConverter","jsxDEV","_jsxDEV","Converter","categoryId","_s","_categoryInfo$name","units","setUnits","selectedUnits","setSelectedUnits","input","setInput","realWorldItems","setRealWorldItems","selectedItems","setSelectedItems","categoryInfo","setCategoryInfo","theme","fromUnit","fetchCategoryInfo","category","collection","getOne","fetchUnitsAndItems","name","toLowerCase","fetchedUnits","getFullList","filter","length","parent","childUnits","items","Promise","all","id","expand","sortedChildUnits","sort","a","b","to_base_factor","sortedItems","parseScientific","scientific_value","slice","map","u","getConvertedValue","unitId","to","find","getComparisonValue","itemId","item","r","from","realValue","val","parts","split","base","parseFloat","exponent","parseInt","Math","pow","fileName","_jsxFileName","lineNumber","columnNumber","className","children","index","unit","ConversionBox","onInputChange","value","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/CuriousCockatoo/client/src/components/Converter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport RealWorldBox from \"./RealWorldBox\";\nimport { formatNumber } from \"../utils/formatNumber\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport MoleConverter from \"./MoleConverter\";\n\nexport default function Converter({ categoryId }) {\n  const [units, setUnits] = useState([]);\n  const [selectedUnits, setSelectedUnits] = useState([]);\n  const [input, setInput] = useState(1);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [categoryInfo, setCategoryInfo] = useState(null);\n  const theme = useTheme();\n\n  const fromUnit = units[0];\n\n  useEffect(() => {\n    const fetchCategoryInfo = async () => {\n      const category = await pb.collection(\"categories\").getOne(categoryId);\n      setCategoryInfo(category);\n    };\n    fetchCategoryInfo();\n  }, [categoryId]);\n\n  useEffect(() => {\n    const fetchUnitsAndItems = async () => {\n      if (!categoryInfo) return;\n\n      // Delegate to MoleConverter if category is Mole\n      if (categoryInfo.name.toLowerCase() === \"mole\") return;\n\n      const fetchedUnits = await pb.collection(\"units\").getFullList({\n        filter: `category=\"${categoryId}\" && parent_unit = \"\"`,\n      });\n\n      if (fetchedUnits.length === 0) return;\n\n      const parent = fetchedUnits[0];\n      const [childUnits, items] = await Promise.all([\n        pb.collection(\"units\").getFullList({\n          filter: `parent_unit = \"${parent.id}\"`,\n        }),\n        pb.collection(\"realworld_items\").getFullList({\n          filter: `unit.parent_unit = \"${parent.id}\"`,\n          expand: \"unit\",\n        }),\n      ]);\n\n      const sortedChildUnits = childUnits.sort((a, b) => a.to_base_factor - b.to_base_factor);\n      const sortedItems = items.sort(\n        (a, b) =>\n          parseScientific(a.scientific_value) - parseScientific(b.scientific_value)\n      );\n\n      setUnits([parent, ...sortedChildUnits]);\n      setSelectedUnits(sortedChildUnits.slice(0, 3).map((u) => u.id));\n      setRealWorldItems(sortedItems);\n      setSelectedItems([sortedItems[0], sortedItems[1], sortedItems[2]]);\n    };\n\n    fetchUnitsAndItems();\n  }, [categoryId, categoryInfo]);\n\n  const getConvertedValue = (unitId) => {\n    const to = units.find((u) => u.id === unitId);\n    if (!to) return 0;\n    return input * to.to_base_factor;\n  };\n\n  const getComparisonValue = (itemId) => {\n    const item = realWorldItems.find((r) => r.id === itemId);\n    const from = units[0];\n    if (!item || !from) return 0;\n\n    const realValue = input * from.to_base_factor;\n    return realValue / parseScientific(item.scientific_value);\n  };\n\n  const parseScientific = (val) => {\n    if (val == null) return null;\n    if (typeof val === \"number\") return val;\n    const parts = val.split(\"×10^\");\n    if (parts.length === 2) {\n      const base = parseFloat(parts[0]);\n      const exponent = parseInt(parts[1], 10);\n      return base * Math.pow(10, exponent);\n    }\n    return parseFloat(val);\n  };\n\n  // Redirect to MoleConverter if this is the Mole category\n  if (categoryInfo?.name?.toLowerCase() === \"mole\") {\n    return (\n      <MoleConverter\n        categoryId={categoryId}\n        input={input}\n        setInput={setInput}\n        theme={theme}\n      />\n    );\n  }\n\n  return (\n    <div className=\"w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {selectedUnits.map((unitId, index) => {\n        const unit = units.find((u) => u.id === unitId);\n        return (\n          <ConversionBox\n            key={index}\n            unit={unit}\n            input={input}\n            onInputChange={setInput}\n            value={getConvertedValue(unitId)}\n            theme={theme}\n            units={units}\n            selectedUnits={selectedUnits}\n            setSelectedUnits={setSelectedUnits}\n            index={index}\n          />\n        );\n      })}\n\n      {selectedItems.map((item, index) => {\n        return (\n          <RealWorldBox\n            key={index}\n            item={item}\n            value={getComparisonValue(item?.id)}\n            input={input}\n            items={realWorldItems}\n            setSelectedItems={setSelectedItems}\n            index={index}\n            theme={theme}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}