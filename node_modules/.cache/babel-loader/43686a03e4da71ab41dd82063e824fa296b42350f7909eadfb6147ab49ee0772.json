{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\ConverterTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = [\"mm³\", \"cm³\", \"mL\", \"in³\", \"pt (US)\", \"qt (US)\", \"L\", \"gal (US)\", \"ft³\", \"yd³\", \"m³\", \"km³\", \"mi³\"];\nexport default function ConverterTable() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"L\");\n  const [results, setResults] = useState({});\n  useEffect(() => {\n    if (!value || isNaN(value)) {\n      setResults({});\n      return;\n    }\n    const fetchAll = async () => {\n      const resObj = {};\n      for (const toUnit of units) {\n        if (toUnit === fromUnit) continue;\n        try {\n          var _data$result;\n          const res = await fetch(`http://localhost:5000/api/convert/volume?value=${value}&from=${encodeURIComponent(fromUnit)}&to=${encodeURIComponent(toUnit)}`);\n          const data = await res.json();\n          resObj[toUnit] = (_data$result = data.result) !== null && _data$result !== void 0 ? _data$result : \"Error\";\n        } catch {\n          resObj[toUnit] = \"Error\";\n        }\n      }\n      setResults(resObj);\n    };\n    fetchAll();\n  }, [value, fromUnit]);\n\n  // Split results into 3 columns\n  const columns = [[], [], []];\n  const otherUnits = units.filter(u => u !== fromUnit);\n  otherUnits.forEach((unit, idx) => {\n    columns[idx % 3].push({\n      unit,\n      value: results[unit] !== undefined ? results[unit] : \"...\"\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-5xl mx-auto p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-center\",\n      children: \"Volume Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4 mb-6 justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        placeholder: \"Enter value\",\n        className: \"border p-2 rounded w-40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: fromUnit,\n        onChange: e => setFromUnit(e.target.value),\n        className: \"border p-2 rounded\",\n        children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: unit\n        }, unit, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-3 gap-6\",\n      children: columns.map((col, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-center mb-3\",\n          children: \"Converted To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2\",\n          children: col.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"border rounded p-2 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: entry.unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: entry.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, entry.unit, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ConverterTable, \"AxHRF9YRfOqVylfa/bvPfvlePiI=\");\n_c = ConverterTable;\nvar _c;\n$RefreshReg$(_c, \"ConverterTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","units","ConverterTable","_s","value","setValue","fromUnit","setFromUnit","results","setResults","isNaN","fetchAll","resObj","toUnit","_data$result","res","fetch","encodeURIComponent","data","json","result","columns","otherUnits","filter","u","forEach","unit","idx","push","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","map","col","i","entry","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/ConverterTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst units = [\n  \"mm³\", \"cm³\", \"mL\", \"in³\", \"pt (US)\", \"qt (US)\", \"L\", \"gal (US)\",\n  \"ft³\", \"yd³\", \"m³\", \"km³\", \"mi³\"\n];\n\nexport default function ConverterTable() {\n  const [value, setValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"L\");\n  const [results, setResults] = useState({});\n\n  useEffect(() => {\n    if (!value || isNaN(value)) {\n      setResults({});\n      return;\n    }\n\n    const fetchAll = async () => {\n      const resObj = {};\n      for (const toUnit of units) {\n        if (toUnit === fromUnit) continue;\n        try {\n          const res = await fetch(\n            `http://localhost:5000/api/convert/volume?value=${value}&from=${encodeURIComponent(fromUnit)}&to=${encodeURIComponent(toUnit)}`\n          );\n          const data = await res.json();\n          resObj[toUnit] = data.result ?? \"Error\";\n        } catch {\n          resObj[toUnit] = \"Error\";\n        }\n      }\n      setResults(resObj);\n    };\n\n    fetchAll();\n  }, [value, fromUnit]);\n\n  // Split results into 3 columns\n  const columns = [[], [], []];\n  const otherUnits = units.filter((u) => u !== fromUnit);\n  otherUnits.forEach((unit, idx) => {\n    columns[idx % 3].push({\n      unit,\n      value: results[unit] !== undefined ? results[unit] : \"...\"\n    });\n  });\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6 bg-white rounded shadow\">\n      <h2 className=\"text-2xl font-semibold mb-6 text-center\">Volume Converter</h2>\n\n      <div className=\"flex items-center gap-4 mb-6 justify-center\">\n        <input\n          type=\"number\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          placeholder=\"Enter value\"\n          className=\"border p-2 rounded w-40\"\n        />\n        <select\n          value={fromUnit}\n          onChange={(e) => setFromUnit(e.target.value)}\n          className=\"border p-2 rounded\"\n        >\n          {units.map((unit) => (\n            <option key={unit}>{unit}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-6\">\n        {columns.map((col, i) => (\n          <div key={i}>\n            <h3 className=\"text-lg font-semibold text-center mb-3\">Converted To</h3>\n            <ul className=\"space-y-2\">\n              {col.map((entry) => (\n                <li\n                  key={entry.unit}\n                  className=\"border rounded p-2 flex justify-between items-center\"\n                >\n                  <span className=\"font-medium\">{entry.unit}</span>\n                  <span>{entry.value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}