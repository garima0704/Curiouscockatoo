{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\VolumeConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PocketBase from \"pocketbase\";\nimport \"./VolumeConverter.css\"; // Make sure this file exists or delete the line\n\n// Units sorted from smallest to largest\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst volumeUnits = [{\n  name: \"nm³\",\n  factor: 1e-27\n}, {\n  name: \"µm³\",\n  factor: 1e-18\n}, {\n  name: \"mm³\",\n  factor: 1e-9\n}, {\n  name: \"cm³\",\n  factor: 1e-6\n}, {\n  name: \"m³\",\n  factor: 1\n}, {\n  name: \"km³\",\n  factor: 1e9\n}];\nconst VolumeConverter = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [fromUnit, setFromUnit] = useState(\"\");\n  const [toUnit1, setToUnit1] = useState(\"\");\n  const [toUnit2, setToUnit2] = useState(\"\");\n  const [toUnit3, setToUnit3] = useState(\"\");\n  const [converted1, setConverted1] = useState(\"\");\n  const [converted2, setConverted2] = useState(\"\");\n  const [converted3, setConverted3] = useState(\"\");\n  const [comparisonItems, setComparisonItems] = useState([]);\n  const [selectedComparison1, setSelectedComparison1] = useState(null);\n  const [selectedComparison2, setSelectedComparison2] = useState(null);\n  const [selectedComparison3, setSelectedComparison3] = useState(null);\n  const [showScientific, setShowScientific] = useState(true);\n  const lowestUnit = volumeUnits[0].name;\n  const [autoSelected, setAutoSelected] = useState({\n    from: false,\n    to1: false,\n    to2: false,\n    to3: false\n  });\n\n  // Auto-select lowest unit once per dropdown\n  useEffect(() => {\n    if (!autoSelected.from && !fromUnit) {\n      setFromUnit(lowestUnit);\n      setAutoSelected(prev => ({\n        ...prev,\n        from: true\n      }));\n    }\n    if (!autoSelected.to1 && !toUnit1) {\n      setToUnit1(lowestUnit);\n      setAutoSelected(prev => ({\n        ...prev,\n        to1: true\n      }));\n    }\n    if (!autoSelected.to2 && !toUnit2) {\n      setToUnit2(lowestUnit);\n      setAutoSelected(prev => ({\n        ...prev,\n        to2: true\n      }));\n    }\n    if (!autoSelected.to3 && !toUnit3) {\n      setToUnit3(lowestUnit);\n      setAutoSelected(prev => ({\n        ...prev,\n        to3: true\n      }));\n    }\n  }, [fromUnit, toUnit1, toUnit2, toUnit3, autoSelected, lowestUnit]);\n\n  // Fetch comparison data\n  useEffect(() => {\n    const fetchData = async () => {\n      const records = await pb.collection(\"real_world_objects\").getFullList({\n        filter: 'category=\"Volume\"',\n        sort: \"+value_normal\"\n      });\n      setComparisonItems(records);\n      setSelectedComparison1(records[0]);\n      setSelectedComparison2(records[1]);\n      setSelectedComparison3(records[2]);\n    };\n    fetchData();\n  }, []);\n\n  // Convert value between units\n  const convert = (value, from, to) => {\n    var _volumeUnits$find, _volumeUnits$find2;\n    const fromFactor = ((_volumeUnits$find = volumeUnits.find(u => u.name === from)) === null || _volumeUnits$find === void 0 ? void 0 : _volumeUnits$find.factor) || 1;\n    const toFactor = ((_volumeUnits$find2 = volumeUnits.find(u => u.name === to)) === null || _volumeUnits$find2 === void 0 ? void 0 : _volumeUnits$find2.factor) || 1;\n    return value * fromFactor / toFactor;\n  };\n\n  // Perform conversions\n  useEffect(() => {\n    const value = parseFloat(inputValue);\n    if (!inputValue || isNaN(value)) {\n      setConverted1(\"\");\n      setConverted2(\"\");\n      setConverted3(\"\");\n      return;\n    }\n    setConverted1(convert(value, fromUnit, toUnit1));\n    setConverted2(convert(value, fromUnit, toUnit2));\n    setConverted3(convert(value, fromUnit, toUnit3));\n  }, [inputValue, fromUnit, toUnit1, toUnit2, toUnit3]);\n\n  // Compare to real-world object\n  const compareWithRealWorld = (input, item) => {\n    if (!input || !(item !== null && item !== void 0 && item.value_normal)) return 0;\n    return parseFloat(input) / parseFloat(item.value_normal);\n  };\n  const formatValue = value => {\n    if (!value && value !== 0) return \"--\";\n    return showScientific ? value.toExponential(3) : value.toLocaleString();\n  };\n  const renderConversionBox = (value, unit, setUnit) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boxStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: valueStyle,\n      children: formatValue(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: unit,\n      onChange: e => setUnit(e.target.value),\n      style: dropdownStyle,\n      children: volumeUnits.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, u.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n  const renderComparisonBox = (selected, setSelected) => {\n    const ratio = compareWithRealWorld(inputValue, selected);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boxStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: valueStyle,\n        children: [formatValue(ratio), \" \\xD7\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selected === null || selected === void 0 ? void 0 : selected.id,\n        onChange: e => setSelected(comparisonItems.find(i => i.id === e.target.value)),\n        style: dropdownStyle,\n        children: comparisonItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"12px\",\n          color: \"#555\",\n          marginTop: \"6px\"\n        },\n        children: [selected === null || selected === void 0 ? void 0 : selected.value_normal, \" \", selected === null || selected === void 0 ? void 0 : selected.unit, \" (\", selected === null || selected === void 0 ? void 0 : selected.value_scientific, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: selected === null || selected === void 0 ? void 0 : selected.note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\",\n      maxWidth: \"1000px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Volume Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: \"25px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter volume\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        style: {\n          padding: \"8px\",\n          width: \"200px\",\n          marginRight: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: fromUnit,\n        onChange: e => setFromUnit(e.target.value),\n        style: dropdownStyle,\n        children: volumeUnits.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: u.name,\n          children: u.name\n        }, u.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScientific(!showScientific),\n        style: {\n          marginLeft: \"20px\",\n          padding: \"8px\"\n        },\n        children: [\"Toggle: \", showScientific ? \"Scientific\" : \"General\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\",\n        gap: \"20px\",\n        marginBottom: \"40px\"\n      },\n      children: [renderConversionBox(converted1, toUnit1, setToUnit1), renderConversionBox(converted2, toUnit2, setToUnit2), renderConversionBox(converted3, toUnit3, setToUnit3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Real-World Comparisons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\",\n        gap: \"20px\"\n      },\n      children: [renderComparisonBox(selectedComparison1, setSelectedComparison1), renderComparisonBox(selectedComparison2, setSelectedComparison2), renderComparisonBox(selectedComparison3, setSelectedComparison3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles\n_s(VolumeConverter, \"MzG400UMlMGffHQPCP8DyAJViDU=\");\n_c = VolumeConverter;\nconst boxStyle = {\n  border: \"1px solid #ccc\",\n  padding: \"15px\",\n  borderRadius: \"12px\",\n  minHeight: \"130px\",\n  background: \"#fafafa\"\n};\nconst valueStyle = {\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  marginBottom: \"10px\"\n};\nconst dropdownStyle = {\n  width: \"100%\",\n  padding: \"6px\"\n};\nexport default VolumeConverter;\nvar _c;\n$RefreshReg$(_c, \"VolumeConverter\");","map":{"version":3,"names":["React","useState","useEffect","PocketBase","jsxDEV","_jsxDEV","volumeUnits","name","factor","VolumeConverter","_s","inputValue","setInputValue","fromUnit","setFromUnit","toUnit1","setToUnit1","toUnit2","setToUnit2","toUnit3","setToUnit3","converted1","setConverted1","converted2","setConverted2","converted3","setConverted3","comparisonItems","setComparisonItems","selectedComparison1","setSelectedComparison1","selectedComparison2","setSelectedComparison2","selectedComparison3","setSelectedComparison3","showScientific","setShowScientific","lowestUnit","autoSelected","setAutoSelected","from","to1","to2","to3","prev","fetchData","records","pb","collection","getFullList","filter","sort","convert","value","to","_volumeUnits$find","_volumeUnits$find2","fromFactor","find","u","toFactor","parseFloat","isNaN","compareWithRealWorld","input","item","value_normal","formatValue","toExponential","toLocaleString","renderConversionBox","unit","setUnit","style","boxStyle","children","valueStyle","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","dropdownStyle","map","renderComparisonBox","selected","setSelected","ratio","id","i","fontSize","color","marginTop","value_scientific","note","padding","maxWidth","margin","display","alignItems","marginBottom","type","placeholder","width","marginRight","onClick","marginLeft","gridTemplateColumns","gap","_c","border","borderRadius","minHeight","background","fontWeight","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/VolumeConverter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PocketBase from \"pocketbase\";\nimport \"./VolumeConverter.css\"; // Make sure this file exists or delete the line\n\n// Units sorted from smallest to largest\nconst volumeUnits = [\n  { name: \"nm³\", factor: 1e-27 },\n  { name: \"µm³\", factor: 1e-18 },\n  { name: \"mm³\", factor: 1e-9 },\n  { name: \"cm³\", factor: 1e-6 },\n  { name: \"m³\", factor: 1 },\n  { name: \"km³\", factor: 1e9 },\n];\n\nconst VolumeConverter = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const [fromUnit, setFromUnit] = useState(\"\");\n  const [toUnit1, setToUnit1] = useState(\"\");\n  const [toUnit2, setToUnit2] = useState(\"\");\n  const [toUnit3, setToUnit3] = useState(\"\");\n\n  const [converted1, setConverted1] = useState(\"\");\n  const [converted2, setConverted2] = useState(\"\");\n  const [converted3, setConverted3] = useState(\"\");\n\n  const [comparisonItems, setComparisonItems] = useState([]);\n  const [selectedComparison1, setSelectedComparison1] = useState(null);\n  const [selectedComparison2, setSelectedComparison2] = useState(null);\n  const [selectedComparison3, setSelectedComparison3] = useState(null);\n\n  const [showScientific, setShowScientific] = useState(true);\n  const lowestUnit = volumeUnits[0].name;\n\n  const [autoSelected, setAutoSelected] = useState({\n    from: false,\n    to1: false,\n    to2: false,\n    to3: false,\n  });\n\n  // Auto-select lowest unit once per dropdown\n  useEffect(() => {\n    if (!autoSelected.from && !fromUnit) {\n      setFromUnit(lowestUnit);\n      setAutoSelected(prev => ({ ...prev, from: true }));\n    }\n    if (!autoSelected.to1 && !toUnit1) {\n      setToUnit1(lowestUnit);\n      setAutoSelected(prev => ({ ...prev, to1: true }));\n    }\n    if (!autoSelected.to2 && !toUnit2) {\n      setToUnit2(lowestUnit);\n      setAutoSelected(prev => ({ ...prev, to2: true }));\n    }\n    if (!autoSelected.to3 && !toUnit3) {\n      setToUnit3(lowestUnit);\n      setAutoSelected(prev => ({ ...prev, to3: true }));\n    }\n  }, [fromUnit, toUnit1, toUnit2, toUnit3, autoSelected, lowestUnit]);\n\n  // Fetch comparison data\n  useEffect(() => {\n    const fetchData = async () => {\n      const records = await pb.collection(\"real_world_objects\").getFullList({\n        filter: 'category=\"Volume\"',\n        sort: \"+value_normal\",\n      });\n      setComparisonItems(records);\n      setSelectedComparison1(records[0]);\n      setSelectedComparison2(records[1]);\n      setSelectedComparison3(records[2]);\n    };\n    fetchData();\n  }, []);\n\n  // Convert value between units\n  const convert = (value, from, to) => {\n    const fromFactor = volumeUnits.find(u => u.name === from)?.factor || 1;\n    const toFactor = volumeUnits.find(u => u.name === to)?.factor || 1;\n    return (value * fromFactor) / toFactor;\n  };\n\n  // Perform conversions\n  useEffect(() => {\n    const value = parseFloat(inputValue);\n    if (!inputValue || isNaN(value)) {\n      setConverted1(\"\");\n      setConverted2(\"\");\n      setConverted3(\"\");\n      return;\n    }\n    setConverted1(convert(value, fromUnit, toUnit1));\n    setConverted2(convert(value, fromUnit, toUnit2));\n    setConverted3(convert(value, fromUnit, toUnit3));\n  }, [inputValue, fromUnit, toUnit1, toUnit2, toUnit3]);\n\n  // Compare to real-world object\n  const compareWithRealWorld = (input, item) => {\n    if (!input || !item?.value_normal) return 0;\n    return parseFloat(input) / parseFloat(item.value_normal);\n  };\n\n  const formatValue = (value) => {\n    if (!value && value !== 0) return \"--\";\n    return showScientific ? value.toExponential(3) : value.toLocaleString();\n  };\n\n  const renderConversionBox = (value, unit, setUnit) => (\n    <div style={boxStyle}>\n      <div style={valueStyle}>{formatValue(value)}</div>\n      <select value={unit} onChange={(e) => setUnit(e.target.value)} style={dropdownStyle}>\n        {volumeUnits.map((u) => (\n          <option key={u.name} value={u.name}>{u.name}</option>\n        ))}\n      </select>\n    </div>\n  );\n\n  const renderComparisonBox = (selected, setSelected) => {\n    const ratio = compareWithRealWorld(inputValue, selected);\n    return (\n      <div style={boxStyle}>\n        <div style={valueStyle}>{formatValue(ratio)} ×</div>\n        <select\n          value={selected?.id}\n          onChange={(e) => setSelected(comparisonItems.find(i => i.id === e.target.value))}\n          style={dropdownStyle}\n        >\n          {comparisonItems.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </select>\n        <div style={{ fontSize: \"12px\", color: \"#555\", marginTop: \"6px\" }}>\n          {selected?.value_normal} {selected?.unit} ({selected?.value_scientific})\n          <br />\n          <em>{selected?.note}</em>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ padding: \"30px\", maxWidth: \"1000px\", margin: \"0 auto\" }}>\n      <h2>Volume Converter</h2>\n\n      {/* Input section */}\n      <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"25px\" }}>\n        <input\n          type=\"number\"\n          placeholder=\"Enter volume\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          style={{ padding: \"8px\", width: \"200px\", marginRight: \"20px\" }}\n        />\n        <select value={fromUnit} onChange={(e) => setFromUnit(e.target.value)} style={dropdownStyle}>\n          {volumeUnits.map((u) => (\n            <option key={u.name} value={u.name}>{u.name}</option>\n          ))}\n        </select>\n        <button onClick={() => setShowScientific(!showScientific)} style={{ marginLeft: \"20px\", padding: \"8px\" }}>\n          Toggle: {showScientific ? \"Scientific\" : \"General\"}\n        </button>\n      </div>\n\n      {/* Conversion Boxes */}\n      <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gap: \"20px\", marginBottom: \"40px\" }}>\n        {renderConversionBox(converted1, toUnit1, setToUnit1)}\n        {renderConversionBox(converted2, toUnit2, setToUnit2)}\n        {renderConversionBox(converted3, toUnit3, setToUnit3)}\n      </div>\n\n      {/* Comparison Boxes */}\n      <h3>Real-World Comparisons</h3>\n      <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gap: \"20px\" }}>\n        {renderComparisonBox(selectedComparison1, setSelectedComparison1)}\n        {renderComparisonBox(selectedComparison2, setSelectedComparison2)}\n        {renderComparisonBox(selectedComparison3, setSelectedComparison3)}\n      </div>\n    </div>\n  );\n};\n\n// Styles\nconst boxStyle = {\n  border: \"1px solid #ccc\",\n  padding: \"15px\",\n  borderRadius: \"12px\",\n  minHeight: \"130px\",\n  background: \"#fafafa\",\n};\n\nconst valueStyle = {\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  marginBottom: \"10px\",\n};\n\nconst dropdownStyle = {\n  width: \"100%\",\n  padding: \"6px\",\n};\n\nexport default VolumeConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}