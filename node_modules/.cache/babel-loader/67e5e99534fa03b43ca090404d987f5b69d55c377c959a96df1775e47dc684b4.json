{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\CuriousCockatoo\\\\client\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState, useContext } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(null);\n  useEffect(() => {\n    const fetchTheme = async () => {\n      try {\n        const record = await pb.collection(\"site_settings\").getFirstListItem('');\n        setTheme({\n          primary: record.primary_color,\n          secondary: record.secondary_color,\n          background: record.background_color,\n          surface: record.surface_color,\n          // ✅ Include this\n          text: record.text_color,\n          font: record.font_family,\n          logo: pb.files.getUrl(record, record.logo_url),\n          favicon: pb.files.getUrl(record, record.favicon_url)\n        });\n\n        // Apply favicon\n        if (record.favicon_url) {\n          const link = document.querySelector(\"link[rel~='icon']\");\n          if (link) link.href = pb.files.getUrl(record, record.favicon_url);\n        }\n\n        // Apply font-family globally\n        if (record.font_family) {\n          document.body.style.fontFamily = record.font_family;\n        }\n      } catch (err) {\n        console.error(\"Failed to load theme settings:\", err);\n      }\n    };\n    fetchTheme();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"8cORP+VmZIUfFKJJBlFCtPazdq0=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useContext","pb","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","fetchTheme","record","collection","getFirstListItem","primary","primary_color","secondary","secondary_color","background","background_color","surface","surface_color","text","text_color","font","font_family","logo","files","getUrl","logo_url","favicon","favicon_url","link","document","querySelector","href","body","style","fontFamily","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/CuriousCockatoo/client/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState, useContext } from \"react\";\r\nimport pb from \"../utils/pocketbaseClient\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTheme = async () => {\r\n      try {\r\n        const record = await pb.collection(\"site_settings\").getFirstListItem('');\r\n        setTheme({\r\n          primary: record.primary_color,\r\n          secondary: record.secondary_color,\r\n          background: record.background_color,\r\n          surface: record.surface_color, // ✅ Include this\r\n          text: record.text_color,\r\n          font: record.font_family,\r\n          logo: pb.files.getUrl(record, record.logo_url),\r\n          favicon: pb.files.getUrl(record, record.favicon_url),\r\n        });\r\n\r\n        // Apply favicon\r\n        if (record.favicon_url) {\r\n          const link = document.querySelector(\"link[rel~='icon']\");\r\n          if (link) link.href = pb.files.getUrl(record, record.favicon_url);\r\n        }\r\n\r\n        // Apply font-family globally\r\n        if (record.font_family) {\r\n          document.body.style.fontFamily = record.font_family;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to load theme settings:\", err);\r\n      }\r\n    };\r\n\r\n    fetchTheme();\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={theme}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC7E,OAAOC,EAAE,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMV,EAAE,CAACW,UAAU,CAAC,eAAe,CAAC,CAACC,gBAAgB,CAAC,EAAE,CAAC;QACxEJ,QAAQ,CAAC;UACPK,OAAO,EAAEH,MAAM,CAACI,aAAa;UAC7BC,SAAS,EAAEL,MAAM,CAACM,eAAe;UACjCC,UAAU,EAAEP,MAAM,CAACQ,gBAAgB;UACnCC,OAAO,EAAET,MAAM,CAACU,aAAa;UAAE;UAC/BC,IAAI,EAAEX,MAAM,CAACY,UAAU;UACvBC,IAAI,EAAEb,MAAM,CAACc,WAAW;UACxBC,IAAI,EAAEzB,EAAE,CAAC0B,KAAK,CAACC,MAAM,CAACjB,MAAM,EAAEA,MAAM,CAACkB,QAAQ,CAAC;UAC9CC,OAAO,EAAE7B,EAAE,CAAC0B,KAAK,CAACC,MAAM,CAACjB,MAAM,EAAEA,MAAM,CAACoB,WAAW;QACrD,CAAC,CAAC;;QAEF;QACA,IAAIpB,MAAM,CAACoB,WAAW,EAAE;UACtB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;UACxD,IAAIF,IAAI,EAAEA,IAAI,CAACG,IAAI,GAAGlC,EAAE,CAAC0B,KAAK,CAACC,MAAM,CAACjB,MAAM,EAAEA,MAAM,CAACoB,WAAW,CAAC;QACnE;;QAEA;QACA,IAAIpB,MAAM,CAACc,WAAW,EAAE;UACtBQ,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG3B,MAAM,CAACc,WAAW;QACrD;MACF,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACtD;IACF,CAAC;IAED7B,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,YAAY,CAACsC,QAAQ;IAACC,KAAK,EAAEnC,KAAM;IAAAF,QAAA,EACjCA;EAAQ;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACxC,EAAA,CAzCWF,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AA2C1B,OAAO,MAAM4C,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlD,UAAU,CAACI,YAAY,CAAC;AAAA;AAAC8C,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}