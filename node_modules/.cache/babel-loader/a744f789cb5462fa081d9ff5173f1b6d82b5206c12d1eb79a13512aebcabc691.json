{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\VolumeUnits.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PocketBase from 'pocketbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pb = new PocketBase('http://127.0.0.1:8090');\nconst VolumeComparisonFinal = () => {\n  _s();\n  const [units, setUnits] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [fromUnit, setFromUnit] = useState(null);\n  const [convertedValues, setConvertedValues] = useState([]);\n\n  // Fetch volume units from PocketBase\n  useEffect(() => {\n    const fetchUnits = async () => {\n      try {\n        const res = await pb.collection('units').getFullList({\n          filter: 'category=\"Volume\"',\n          sort: '+to_base_factor'\n        });\n        setUnits(res);\n        if (res.length > 0) setFromUnit(res[0]); // Default select first\n      } catch (error) {\n        console.error('Error fetching units:', error);\n      }\n    };\n    fetchUnits();\n  }, []);\n\n  // Handle conversion\n  useEffect(() => {\n    if (!fromUnit || !inputValue || isNaN(inputValue)) {\n      setConvertedValues([]);\n      return;\n    }\n    const input = parseFloat(inputValue);\n    const baseValue = input * parseFloat(fromUnit.to_base_factor || 1);\n    const selected = units.filter(unit => unit.id !== fromUnit.id).slice(0, 3) // Show only 3\n    .map(unit => {\n      const converted = baseValue / parseFloat(unit.to_base_factor || 1);\n      return {\n        name: unit.name,\n        symbol: unit.symbol,\n        value: converted.toExponential(4)\n      };\n    });\n    setConvertedValues(selected);\n  }, [inputValue, fromUnit, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Volume Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        style: {\n          marginLeft: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select from unit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (fromUnit === null || fromUnit === void 0 ? void 0 : fromUnit.id) || '',\n        onChange: e => setFromUnit(units.find(u => u.id === e.target.value)),\n        style: {\n          marginLeft: '10px',\n          padding: '5px'\n        },\n        children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: unit.id,\n          children: [unit.name, \" (\", unit.symbol, \")\"]\n        }, unit.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Convert To\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), convertedValues.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: convertedValues.map((unit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: unit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [unit.value, \" \", unit.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a value to see conversions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(VolumeComparisonFinal, \"lS82I2/QfCx+jYvun5+Otxz8U80=\");\n_c = VolumeComparisonFinal;\nexport default VolumeComparisonFinal;\nvar _c;\n$RefreshReg$(_c, \"VolumeComparisonFinal\");","map":{"version":3,"names":["React","useEffect","useState","PocketBase","jsxDEV","_jsxDEV","pb","VolumeComparisonFinal","_s","units","setUnits","inputValue","setInputValue","fromUnit","setFromUnit","convertedValues","setConvertedValues","fetchUnits","res","collection","getFullList","filter","sort","length","error","console","isNaN","input","parseFloat","baseValue","to_base_factor","selected","unit","id","slice","map","converted","name","symbol","value","toExponential","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","onChange","e","target","marginLeft","find","u","display","gap","index","border","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/VolumeUnits.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PocketBase from 'pocketbase';\n\nconst pb = new PocketBase('http://127.0.0.1:8090');\n\nconst VolumeComparisonFinal = () => {\n  const [units, setUnits] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [fromUnit, setFromUnit] = useState(null);\n  const [convertedValues, setConvertedValues] = useState([]);\n\n  // Fetch volume units from PocketBase\n  useEffect(() => {\n    const fetchUnits = async () => {\n      try {\n        const res = await pb.collection('units').getFullList({\n          filter: 'category=\"Volume\"',\n          sort: '+to_base_factor'\n        });\n        setUnits(res);\n        if (res.length > 0) setFromUnit(res[0]); // Default select first\n      } catch (error) {\n        console.error('Error fetching units:', error);\n      }\n    };\n    fetchUnits();\n  }, []);\n\n  // Handle conversion\n  useEffect(() => {\n    if (!fromUnit || !inputValue || isNaN(inputValue)) {\n      setConvertedValues([]);\n      return;\n    }\n\n    const input = parseFloat(inputValue);\n    const baseValue = input * parseFloat(fromUnit.to_base_factor || 1);\n\n    const selected = units\n      .filter(unit => unit.id !== fromUnit.id)\n      .slice(0, 3) // Show only 3\n      .map(unit => {\n        const converted = baseValue / parseFloat(unit.to_base_factor || 1);\n        return {\n          name: unit.name,\n          symbol: unit.symbol,\n          value: converted.toExponential(4),\n        };\n      });\n\n    setConvertedValues(selected);\n  }, [inputValue, fromUnit, units]);\n\n  return (\n    <div style={{ padding: '30px' }}>\n      <h2>Volume Converter</h2>\n\n      <div style={{ marginBottom: '20px' }}>\n        <label>Enter value:</label>\n        <input\n          type=\"number\"\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          style={{ marginLeft: '10px', padding: '5px' }}\n        />\n      </div>\n\n      <div style={{ marginBottom: '30px' }}>\n        <label>Select from unit:</label>\n        <select\n          value={fromUnit?.id || ''}\n          onChange={e => setFromUnit(units.find(u => u.id === e.target.value))}\n          style={{ marginLeft: '10px', padding: '5px' }}\n        >\n          {units.map(unit => (\n            <option key={unit.id} value={unit.id}>\n              {unit.name} ({unit.symbol})\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <h3>Convert To</h3>\n      {convertedValues.length > 0 ? (\n        <div style={{ display: 'flex', gap: '20px' }}>\n          {convertedValues.map((unit, index) => (\n            <div key={index} style={{ border: '1px solid #ccc', padding: '10px' }}>\n              <strong>{unit.name}</strong>\n              <p>{unit.value} {unit.symbol}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>Enter a value to see conversions.</p>\n      )}\n    </div>\n  );\n};\n\nexport default VolumeComparisonFinal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}