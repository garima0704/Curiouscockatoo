{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\PhysicalComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// Real-world objects with volume in cubic meters (m³)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  name: \"Hydrogen Atom\",\n  volume: 6.5e-31\n}, {\n  name: \"Virus (e.g., Influenza)\",\n  volume: 5e-21\n}, {\n  name: \"Red Blood Cell\",\n  volume: 9e-17\n}, {\n  name: \"Human Egg Cell\",\n  volume: 1e-12\n}, {\n  name: \"Water Droplet\",\n  volume: 5e-8\n}, {\n  name: \"Teaspoon\",\n  volume: 5e-6\n}, {\n  name: \"Golf Ball\",\n  volume: 4.1e-5\n}, {\n  name: \"Tennis Ball\",\n  volume: 1.6e-4\n}, {\n  name: \"Coffee Cup\",\n  volume: 2e-4\n}, {\n  name: \"Milk Carton (1L)\",\n  volume: 1e-3\n}, {\n  name: \"Cooking Pot (5L)\",\n  volume: 0.005\n}, {\n  name: \"Pressure Cooker (10L)\",\n  volume: 0.01\n}, {\n  name: \"Standard Oven\",\n  volume: 0.07\n}, {\n  name: \"Refrigerator Interior\",\n  volume: 0.8\n}, {\n  name: \"Car Interior (Compact)\",\n  volume: 4\n}, {\n  name: \"Small Bedroom\",\n  volume: 30\n}, {\n  name: \"Shipping Container (20ft)\",\n  volume: 33\n}, {\n  name: \"Swimming Pool (residential)\",\n  volume: 80\n}, {\n  name: \"Classroom\",\n  volume: 240\n}, {\n  name: \"Olympic Swimming Pool\",\n  volume: 2500\n}, {\n  name: \"Empire State Building\",\n  volume: 1e6\n}, {\n  name: \"Pyramid of Giza\",\n  volume: 2.6e6\n}, {\n  name: \"Mount Everest\",\n  volume: 5.2e13\n}, {\n  name: \"Earth\",\n  volume: 1.083e21\n}, {\n  name: \"Sun\",\n  volume: 1.41e27\n}, {\n  name: \"UY Scuti\",\n  volume: 6.93e36\n}];\nconst formatValue = val => {\n  if (!val || isNaN(val)) return \"-\";\n  return Number(val).toExponential(2).replace(\"e+\", \"×10^\").replace(\"e\", \"×10^\");\n};\nexport default function PhysicalComparison({\n  volumeM3\n}) {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    if (!volumeM3 || isNaN(volumeM3)) {\n      setResults([]);\n      return;\n    }\n    const computed = items.map(item => ({\n      name: item.name,\n      count: volumeM3 / item.volume\n    }));\n    setResults(computed);\n  }, [volumeM3]);\n  const columns = [[], [], []];\n  results.forEach((item, index) => {\n    columns[index % 3].push(item);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-center mb-6\",\n      children: \"Real-World Comparison (based on volume in m\\xB3)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: columns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border rounded shadow p-4 max-h-[500px] overflow-y-auto\",\n        children: col.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-1 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono text-blue-700\",\n            children: formatValue(item.count)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), \" \", \"\\xD7 \", item.name]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(PhysicalComparison, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = PhysicalComparison;\nvar _c;\n$RefreshReg$(_c, \"PhysicalComparison\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","items","name","volume","formatValue","val","isNaN","Number","toExponential","replace","PhysicalComparison","volumeM3","_s","results","setResults","computed","map","item","count","columns","forEach","index","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","col","idx","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/PhysicalComparison.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// Real-world objects with volume in cubic meters (m³)\nconst items = [\n  { name: \"Hydrogen Atom\", volume: 6.5e-31 },\n  { name: \"Virus (e.g., Influenza)\", volume: 5e-21 },\n  { name: \"Red Blood Cell\", volume: 9e-17 },\n  { name: \"Human Egg Cell\", volume: 1e-12 },\n  { name: \"Water Droplet\", volume: 5e-8 },\n  { name: \"Teaspoon\", volume: 5e-6 },\n  { name: \"Golf Ball\", volume: 4.1e-5 },\n  { name: \"Tennis Ball\", volume: 1.6e-4 },\n  { name: \"Coffee Cup\", volume: 2e-4 },\n  { name: \"Milk Carton (1L)\", volume: 1e-3 },\n  { name: \"Cooking Pot (5L)\", volume: 0.005 },\n  { name: \"Pressure Cooker (10L)\", volume: 0.01 },\n  { name: \"Standard Oven\", volume: 0.07 },\n  { name: \"Refrigerator Interior\", volume: 0.8 },\n  { name: \"Car Interior (Compact)\", volume: 4 },\n  { name: \"Small Bedroom\", volume: 30 },\n  { name: \"Shipping Container (20ft)\", volume: 33 },\n  { name: \"Swimming Pool (residential)\", volume: 80 },\n  { name: \"Classroom\", volume: 240 },\n  { name: \"Olympic Swimming Pool\", volume: 2500 },\n  { name: \"Empire State Building\", volume: 1e6 },\n  { name: \"Pyramid of Giza\", volume: 2.6e6 },\n  { name: \"Mount Everest\", volume: 5.2e13 },\n  { name: \"Earth\", volume: 1.083e21 },\n  { name: \"Sun\", volume: 1.41e27 },\n  { name: \"UY Scuti\", volume: 6.93e36 }\n];\n\nconst formatValue = (val) => {\n  if (!val || isNaN(val)) return \"-\";\n  return Number(val).toExponential(2).replace(\"e+\", \"×10^\").replace(\"e\", \"×10^\");\n};\n\nexport default function PhysicalComparison({ volumeM3 }) {\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    if (!volumeM3 || isNaN(volumeM3)) {\n      setResults([]);\n      return;\n    }\n\n    const computed = items.map((item) => ({\n      name: item.name,\n      count: volumeM3 / item.volume\n    }));\n\n    setResults(computed);\n  }, [volumeM3]);\n\n  const columns = [[], [], []];\n  results.forEach((item, index) => {\n    columns[index % 3].push(item);\n  });\n\n  return (\n    <div className=\"mt-12\">\n      <h3 className=\"text-xl font-semibold text-center mb-6\">\n        Real-World Comparison (based on volume in m³)\n      </h3>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {columns.map((col, idx) => (\n          <div\n            key={idx}\n            className=\"bg-white border rounded shadow p-4 max-h-[500px] overflow-y-auto\"\n          >\n            {col.map((item) => (\n              <div key={item.name} className=\"py-1 text-sm\">\n                <span className=\"font-mono text-blue-700\">\n                  {formatValue(item.count)}\n                </span>{\" \"}\n                × {item.name}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}