{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\ChargeConverter.js\",\n  _s = $RefreshSig$();\n// ChargeConverter.js\nimport React, { useState, useEffect } from \"react\";\nimport PocketBase from \"pocketbase\";\nimport \"./UnitConverter.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pb = new PocketBase(\"http://127.0.0.1:8090\");\npb.autoCancellation(false);\nconst formatExponent = val => {\n  if (!val || isNaN(val)) return \"...\";\n  const [base, expRaw] = val.toExponential(2).split(\"e\");\n  const exp = expRaw.replace(\"+\", \"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [parseFloat(base).toFixed(2), \"\\xD710\", /*#__PURE__*/_jsxDEV(\"sup\", {\n      children: exp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true);\n};\nconst formatNumber = (value, scientific, forceScientific = false) => {\n  if (value === null || value === undefined || isNaN(value)) return \"...\";\n  const abs = Math.abs(value);\n  if (scientific || forceScientific || abs !== 0 && (abs >= 1e6 || abs < 1e-3)) {\n    return formatExponent(value);\n  }\n  return parseFloat(value).toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 6\n  });\n};\nconst formatExpression = expression => {\n  if (!expression) return null;\n  const parts = expression.split(/(\\^-?\\d+)/g);\n  return parts.map((part, idx) => {\n    const match = part.match(/^\\^(-?\\d+)$/);\n    if (match) {\n      return /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: match[1]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: part\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  });\n};\nconst RealWorldBox = ({\n  selected,\n  setSelected,\n  items,\n  inputInBase,\n  scientific\n}) => {\n  const sortedItems = [...items].sort((a, b) => a.scientific_value - b.scientific_value);\n  const approx = selected !== null && selected !== void 0 && selected.approx_value ? parseFloat(selected.approx_value) : null;\n  const result = selected && inputInBase && approx ? inputInBase / approx : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow border rounded-lg p-4 flex flex-col gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold text-blue-600 text-center break-words\",\n      children: formatNumber(result, scientific)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: (selected === null || selected === void 0 ? void 0 : selected.id) || \"\",\n      onChange: e => {\n        const item = items.find(obj => obj.id === e.target.value);\n        if (item) setSelected(item);\n      },\n      className: \"border p-2 rounded w-full text-sm\",\n      children: sortedItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.id,\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-700 bg-gray-50 rounded p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-semibold text-center\",\n        children: selected.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-600\",\n          children: formatNumber(selected.scientific_value, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: selected.expression ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatExpression(selected.expression)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this) : approx !== null ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [formatNumber(approx, false, true), ' ', selected.expand && selected.expand.unit && typeof selected.expand.unit.symbol === 'string' ? selected.expand.unit.symbol : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2013\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), selected.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 italic mt-2\",\n        children: selected.notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = RealWorldBox;\nfunction ChargeConverter({\n  selectedCategory = \"Charge\"\n}) {\n  _s();\n  const [units, setUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedFromUnit, setSelectedFromUnit] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [toUnit1, setToUnit1] = useState(\"\");\n  const [toUnit2, setToUnit2] = useState(\"\");\n  const [toUnit3, setToUnit3] = useState(\"\");\n  const [sciConv, setSciConv] = useState([false, false, false]);\n  const [sciReal, setSciReal] = useState([false, false, false]);\n  const [real, setReal] = useState([null, null, null]);\n  useEffect(() => {\n    const fetchCategory = async () => {\n      const categories = await pb.collection(\"categories\").getFullList();\n      const match = categories.find(c => c.name === selectedCategory);\n      if (match) setCategoryId(match.id);\n    };\n    if (selectedCategory) fetchCategory();\n  }, [selectedCategory]);\n  useEffect(() => {\n    if (categoryId) {\n      pb.collection(\"units\").getFullList({\n        filter: `category = \\\"${categoryId}\\\"`\n      }).then(units => {\n        var _sorted$, _sorted$2, _sorted$3, _sorted$4;\n        const sorted = [...units].sort((a, b) => a.to_base_factor - b.to_base_factor);\n        setUnits(sorted);\n        setSelectedFromUnit(((_sorted$ = sorted[0]) === null || _sorted$ === void 0 ? void 0 : _sorted$.id) || \"\");\n        setToUnit1(((_sorted$2 = sorted[0]) === null || _sorted$2 === void 0 ? void 0 : _sorted$2.id) || \"\");\n        setToUnit2(((_sorted$3 = sorted[1]) === null || _sorted$3 === void 0 ? void 0 : _sorted$3.id) || \"\");\n        setToUnit3(((_sorted$4 = sorted[2]) === null || _sorted$4 === void 0 ? void 0 : _sorted$4.id) || \"\");\n      });\n      pb.collection(\"realworld_items\").getFullList({\n        filter: `category = \\\"${categoryId}\\\"`,\n        expand: \"unit\"\n      }).then(items => {\n        setRealWorldItems(items);\n        setReal([items[0], items[1], items[2]]);\n      });\n    }\n  }, [categoryId]);\n  const getConverted = (toUnitId, sci) => {\n    if (!inputValue || !selectedFromUnit || !toUnitId) return \"\";\n    const from = units.find(u => u.id === selectedFromUnit);\n    const to = units.find(u => u.id === toUnitId);\n    if (!from || !to) return \"\";\n    const result = parseFloat(inputValue) * from.to_base_factor / to.to_base_factor;\n    return formatNumber(result, sci);\n  };\n  const inputToBase = () => {\n    const from = units.find(u => u.id === selectedFromUnit);\n    return from && inputValue ? parseFloat(inputValue) * from.to_base_factor : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto px-4 py-6 bg-white rounded-lg shadow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row gap-6 items-stretch\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/4 flex flex-col justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-center\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            className: \"border p-2 rounded w-full\",\n            placeholder: \"Enter value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedFromUnit,\n            onChange: e => setSelectedFromUnit(e.target.value),\n            className: \"border p-2 rounded w-full\",\n            children: units.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: u.id,\n              children: [u.name, \" (\", u.symbol, \")\"]\n            }, u.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-3/4 space-y-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-4 text-center\",\n            children: \"Conversion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 sm:grid-cols-3 gap-4\",\n            children: [toUnit1, toUnit2, toUnit3].map((id, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `px-3 py-1 rounded-l ${!sciConv[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                  onClick: () => setSciConv(prev => prev.map((v, i) => i === index ? false : v)),\n                  children: \"General\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `px-3 py-1 rounded-r ${sciConv[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                  onClick: () => setSciConv(prev => prev.map((v, i) => i === index ? true : v)),\n                  children: \"Scientific\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded p-4 bg-white shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xl font-bold text-blue-600 mb-2 text-center break-words\",\n                  children: getConverted(id, sciConv[index]) || \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: id,\n                  onChange: e => {\n                    const setter = [setToUnit1, setToUnit2, setToUnit3][index];\n                    setter(e.target.value);\n                  },\n                  className: \"border p-2 rounded w-full text-sm text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Convert To --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this), units.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: u.id,\n                    children: [u.name, \" (\", u.symbol, \") \\u2013 \", getConverted(u.id, sciConv[index])]\n                  }, u.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-4 text-center\",\n            children: \"Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 sm:grid-cols-3 gap-4\",\n            children: real.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `px-3 py-1 rounded-l ${!sciReal[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                  onClick: () => setSciReal(prev => prev.map((v, i) => i === index ? false : v)),\n                  children: \"General\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `px-3 py-1 rounded-r ${sciReal[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n                  onClick: () => setSciReal(prev => prev.map((v, i) => i === index ? true : v)),\n                  children: \"Scientific\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RealWorldBox, {\n                selected: item,\n                setSelected: newItem => {\n                  setReal(prev => prev.map((v, i) => i === index ? newItem : v));\n                },\n                items: realWorldItems,\n                inputInBase: inputToBase(),\n                scientific: sciReal[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(ChargeConverter, \"wMWyYjha+fA9QDmDHJvUGMHZAgs=\");\n_c2 = ChargeConverter;\nexport default ChargeConverter;\nvar _c, _c2;\n$RefreshReg$(_c, \"RealWorldBox\");\n$RefreshReg$(_c2, \"ChargeConverter\");","map":{"version":3,"names":["React","useState","useEffect","PocketBase","jsxDEV","_jsxDEV","Fragment","_Fragment","pb","autoCancellation","formatExponent","val","isNaN","base","expRaw","toExponential","split","exp","replace","children","parseFloat","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","formatNumber","value","scientific","forceScientific","undefined","abs","Math","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatExpression","expression","parts","map","part","idx","match","RealWorldBox","selected","setSelected","items","inputInBase","sortedItems","sort","a","b","scientific_value","approx","approx_value","result","className","id","onChange","e","item","find","obj","target","name","expand","unit","symbol","notes","_c","ChargeConverter","selectedCategory","_s","units","setUnits","realWorldItems","setRealWorldItems","selectedFromUnit","setSelectedFromUnit","inputValue","setInputValue","categoryId","setCategoryId","toUnit1","setToUnit1","toUnit2","setToUnit2","toUnit3","setToUnit3","sciConv","setSciConv","sciReal","setSciReal","real","setReal","fetchCategory","categories","collection","getFullList","c","filter","then","_sorted$","_sorted$2","_sorted$3","_sorted$4","sorted","to_base_factor","getConverted","toUnitId","sci","from","u","to","inputToBase","type","placeholder","index","onClick","prev","v","i","setter","newItem","_c2","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/ChargeConverter.js"],"sourcesContent":["// ChargeConverter.js\nimport React, { useState, useEffect } from \"react\";\nimport PocketBase from \"pocketbase\";\nimport \"./UnitConverter.css\";\n\nconst pb = new PocketBase(\"http://127.0.0.1:8090\");\npb.autoCancellation(false);\n\nconst formatExponent = (val) => {\n  if (!val || isNaN(val)) return \"...\";\n  const [base, expRaw] = val.toExponential(2).split(\"e\");\n  const exp = expRaw.replace(\"+\", \"\");\n  return (\n    <>\n      {parseFloat(base).toFixed(2)}&times;10<sup>{exp}</sup>\n    </>\n  );\n};\n\nconst formatNumber = (value, scientific, forceScientific = false) => {\n  if (value === null || value === undefined || isNaN(value)) return \"...\";\n  const abs = Math.abs(value);\n  if (scientific || forceScientific || (abs !== 0 && (abs >= 1e6 || abs < 1e-3))) {\n    return formatExponent(value);\n  }\n  return parseFloat(value).toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 6,\n  });\n};\n\nconst formatExpression = (expression) => {\n  if (!expression) return null;\n  const parts = expression.split(/(\\^-?\\d+)/g);\n  return parts.map((part, idx) => {\n    const match = part.match(/^\\^(-?\\d+)$/);\n    if (match) {\n      return <sup key={idx}>{match[1]}</sup>;\n    }\n    return <span key={idx}>{part}</span>;\n  });\n};\n\nconst RealWorldBox = ({ selected, setSelected, items, inputInBase, scientific }) => {\n  const sortedItems = [...items].sort((a, b) => a.scientific_value - b.scientific_value);\n  const approx = selected?.approx_value ? parseFloat(selected.approx_value) : null;\n  const result = selected && inputInBase && approx ? inputInBase / approx : null;\n\n  return (\n    <div className=\"bg-white shadow border rounded-lg p-4 flex flex-col gap-3\">\n      <div className=\"text-xl font-bold text-blue-600 text-center break-words\">\n        {formatNumber(result, scientific)}\n      </div>\n\n      <select\n        value={selected?.id || \"\"}\n        onChange={(e) => {\n          const item = items.find((obj) => obj.id === e.target.value);\n          if (item) setSelected(item);\n        }}\n        className=\"border p-2 rounded w-full text-sm\"\n      >\n        {sortedItems.map((item) => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n\n      {selected && (\n        <div className=\"text-sm text-gray-700 bg-gray-50 rounded p-2 border\">\n          <div className=\"font-semibold text-center\">{selected.name}</div>\n          <div className=\"flex justify-between text-xs mt-1\">\n            <span className=\"text-blue-600\">\n              {formatNumber(selected.scientific_value, true)}\n            </span>\n            <span>\n              {selected.expression ? (\n                <span>{formatExpression(selected.expression)}</span>\n              ) : approx !== null ? (\n                <span>\n                  {formatNumber(approx, false, true)}{' '}\n                  {selected.expand && selected.expand.unit && typeof selected.expand.unit.symbol === 'string'\n                    ? selected.expand.unit.symbol\n                    : ''}\n                </span>\n              ) : (\n                <span>–</span>\n              )}\n            </span>\n          </div>\n          {selected.notes && (\n            <div className=\"text-center text-gray-500 italic mt-2\">\n              {selected.notes}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction ChargeConverter({ selectedCategory = \"Charge\" }) {\n  const [units, setUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedFromUnit, setSelectedFromUnit] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [toUnit1, setToUnit1] = useState(\"\");\n  const [toUnit2, setToUnit2] = useState(\"\");\n  const [toUnit3, setToUnit3] = useState(\"\");\n  const [sciConv, setSciConv] = useState([false, false, false]);\n  const [sciReal, setSciReal] = useState([false, false, false]);\n  const [real, setReal] = useState([null, null, null]);\n\n  useEffect(() => {\n    const fetchCategory = async () => {\n      const categories = await pb.collection(\"categories\").getFullList();\n      const match = categories.find((c) => c.name === selectedCategory);\n      if (match) setCategoryId(match.id);\n    };\n    if (selectedCategory) fetchCategory();\n  }, [selectedCategory]);\n\n  useEffect(() => {\n    if (categoryId) {\n      pb.collection(\"units\")\n        .getFullList({ filter: `category = \\\"${categoryId}\\\"` })\n        .then((units) => {\n          const sorted = [...units].sort((a, b) => a.to_base_factor - b.to_base_factor);\n          setUnits(sorted);\n          setSelectedFromUnit(sorted[0]?.id || \"\");\n          setToUnit1(sorted[0]?.id || \"\");\n          setToUnit2(sorted[1]?.id || \"\");\n          setToUnit3(sorted[2]?.id || \"\");\n        });\n\n      pb.collection(\"realworld_items\")\n        .getFullList({ filter: `category = \\\"${categoryId}\\\"`, expand: \"unit\" })\n        .then((items) => {\n          setRealWorldItems(items);\n          setReal([items[0], items[1], items[2]]);\n        });\n    }\n  }, [categoryId]);\n\n  const getConverted = (toUnitId, sci) => {\n    if (!inputValue || !selectedFromUnit || !toUnitId) return \"\";\n    const from = units.find((u) => u.id === selectedFromUnit);\n    const to = units.find((u) => u.id === toUnitId);\n    if (!from || !to) return \"\";\n    const result = (parseFloat(inputValue) * from.to_base_factor) / to.to_base_factor;\n    return formatNumber(result, sci);\n  };\n\n  const inputToBase = () => {\n    const from = units.find((u) => u.id === selectedFromUnit);\n    return from && inputValue ? parseFloat(inputValue) * from.to_base_factor : null;\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto px-4 py-6 bg-white rounded-lg shadow\">\n      <div className=\"flex flex-col md:flex-row gap-6 items-stretch\">\n        <div className=\"md:w-1/4 flex flex-col justify-center\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-center\">From</h3>\n            <input\n              type=\"number\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              className=\"border p-2 rounded w-full\"\n              placeholder=\"Enter value\"\n            />\n            <select\n              value={selectedFromUnit}\n              onChange={(e) => setSelectedFromUnit(e.target.value)}\n              className=\"border p-2 rounded w-full\"\n            >\n              {units.map((u) => (\n                <option key={u.id} value={u.id}>\n                  {u.name} ({u.symbol})\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"md:w-3/4 space-y-10\">\n          <div>\n            <h2 className=\"text-2xl font-bold mb-4 text-center\">Conversion</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              {[toUnit1, toUnit2, toUnit3].map((id, index) => (\n                <div key={index} className=\"flex flex-col gap-2\">\n                  <div className=\"flex justify-center\">\n                    <button\n                      className={`px-3 py-1 rounded-l ${!sciConv[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`}\n                      onClick={() => setSciConv((prev) => prev.map((v, i) => (i === index ? false : v)))}\n                    >\n                      General\n                    </button>\n                    <button\n                      className={`px-3 py-1 rounded-r ${sciConv[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`}\n                      onClick={() => setSciConv((prev) => prev.map((v, i) => (i === index ? true : v)))}\n                    >\n                      Scientific\n                    </button>\n                  </div>\n                  <div className=\"border rounded p-4 bg-white shadow-sm\">\n                    <div className=\"text-xl font-bold text-blue-600 mb-2 text-center break-words\">\n                      {getConverted(id, sciConv[index]) || \"...\"}\n                    </div>\n                    <select\n                      value={id}\n                      onChange={(e) => {\n                        const setter = [setToUnit1, setToUnit2, setToUnit3][index];\n                        setter(e.target.value);\n                      }}\n                      className=\"border p-2 rounded w-full text-sm text-center\"\n                    >\n                      <option value=\"\">-- Convert To --</option>\n                      {units.map((u) => (\n                        <option key={u.id} value={u.id}>\n                          {u.name} ({u.symbol}) – {getConverted(u.id, sciConv[index])}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <h2 className=\"text-2xl font-bold mb-4 text-center\">Comparison</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              {real.map((item, index) => (\n                <div key={index}>\n                  <div className=\"flex justify-center mb-2\">\n                    <button\n                      className={`px-3 py-1 rounded-l ${!sciReal[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`}\n                      onClick={() => setSciReal((prev) => prev.map((v, i) => (i === index ? false : v)))}\n                    >\n                      General\n                    </button>\n                    <button\n                      className={`px-3 py-1 rounded-r ${sciReal[index] ? \"bg-blue-600 text-white\" : \"bg-white border\"}`}\n                      onClick={() => setSciReal((prev) => prev.map((v, i) => (i === index ? true : v)))}\n                    >\n                      Scientific\n                    </button>\n                  </div>\n                  <RealWorldBox\n                    selected={item}\n                    setSelected={(newItem) => {\n                      setReal((prev) => prev.map((v, i) => (i === index ? newItem : v)));\n                    }}\n                    items={realWorldItems}\n                    inputInBase={inputToBase()}\n                    scientific={sciReal[index]}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChargeConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}