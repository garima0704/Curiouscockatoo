{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\CuriousCockatoo\\\\client\\\\src\\\\components\\\\Converter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport InputSelector from \"./InputSelector\";\nimport ConversionBox from \"./ConversionBox\";\nimport ComparisonBox from \"./ComparisonBox\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = ({\n  categoryId\n}) => {\n  _s();\n  const theme = useTheme();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [childUnits, setChildUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedUnits, setSelectedUnits] = useState([\"\", \"\", \"\"]);\n  const [selectedItems, setSelectedItems] = useState([\"\", \"\", \"\"]);\n  const [conversionToggles, setConversionToggles] = useState([false, false, false]);\n  const [comparisonToggles, setComparisonToggles] = useState([false, false, false]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const units = await pb.collection(\"units\").getFullList({\n        filter: `category=\"${categoryId}\"`\n      });\n      const items = await pb.collection(\"real_world_items\").getFullList({\n        filter: `category=\"${categoryId}\"`\n      });\n\n      // Sort childUnits normally (by name or any custom logic)\n      setChildUnits(units);\n\n      // Sort real-world items by scientific_value ASC\n      const sortedItems = [...items].sort((a, b) => {\n        var _a$scientific_value, _b$scientific_value;\n        return ((_a$scientific_value = a.scientific_value) !== null && _a$scientific_value !== void 0 ? _a$scientific_value : 0) - ((_b$scientific_value = b.scientific_value) !== null && _b$scientific_value !== void 0 ? _b$scientific_value : 0);\n      });\n      setRealWorldItems(sortedItems);\n\n      // Pick first 3 sorted items for selection (use their IDs)\n      const initialComparisonIds = sortedItems.slice(0, 3).map(item => item.id);\n      while (initialComparisonIds.length < 3) initialComparisonIds.push(\"\");\n      setSelectedItems(initialComparisonIds);\n      setSelectedUnits(units.slice(0, 3).map(u => u.id)); // default first 3 units\n    };\n    fetchData();\n  }, [categoryId]);\n  const getConvertedValue = toUnitId => {\n    const fromUnit = childUnits[0]; // Assume input is always from first unit\n    const toUnit = childUnits.find(u => u.id === toUnitId);\n    if (!fromUnit || !toUnit || !inputValue) return \"\";\n    const valueInBase = parseFloat(inputValue) * fromUnit.to_base_factor;\n    return valueInBase / toUnit.to_base_factor;\n  };\n  const getComparisonValue = itemId => {\n    const item = realWorldItems.find(i => i.id === itemId);\n    if (!item || !inputValue || !item.approx_value) return \"\";\n    return parseFloat(inputValue) / item.approx_value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-4\",\n    style: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : theme.container\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputSelector, {\n      inputValue: inputValue,\n      setInputValue: setInputValue,\n      units: childUnits,\n      selectedUnit: childUnits[0],\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: selectedUnits.map((toUnitId, index) => /*#__PURE__*/_jsxDEV(ConversionBox, {\n        toUnitId: toUnitId,\n        index: index,\n        childUnits: childUnits,\n        getConvertedValue: getConvertedValue,\n        conversionToggles: conversionToggles,\n        setConversionToggles: setConversionToggles,\n        selectedUnits: selectedUnits,\n        setSelectedUnits: setSelectedUnits,\n        theme: theme\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: selectedItems.map((itemId, index) => /*#__PURE__*/_jsxDEV(ComparisonBox, {\n        index: index,\n        itemId: itemId,\n        realWorldItems: realWorldItems,\n        comparisonToggles: comparisonToggles,\n        setComparisonToggles: setComparisonToggles,\n        selectedItems: selectedItems,\n        setSelectedItems: setSelectedItems,\n        getComparisonValue: getComparisonValue,\n        theme: theme\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Converter, \"j7geRzNnbRAsDtuKz7c0umE4blA=\", false, function () {\n  return [useTheme];\n});\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useEffect","useState","pb","InputSelector","ConversionBox","ComparisonBox","useTheme","jsxDEV","_jsxDEV","Converter","categoryId","_s","theme","inputValue","setInputValue","childUnits","setChildUnits","realWorldItems","setRealWorldItems","selectedUnits","setSelectedUnits","selectedItems","setSelectedItems","conversionToggles","setConversionToggles","comparisonToggles","setComparisonToggles","fetchData","units","collection","getFullList","filter","items","sortedItems","sort","a","b","_a$scientific_value","_b$scientific_value","scientific_value","initialComparisonIds","slice","map","item","id","length","push","u","getConvertedValue","toUnitId","fromUnit","toUnit","find","valueInBase","parseFloat","to_base_factor","getComparisonValue","itemId","i","approx_value","className","style","backgroundColor","container","children","selectedUnit","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/CuriousCockatoo/client/src/components/Converter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport pb from \"../utils/pocketbaseClient\";\nimport InputSelector from \"./InputSelector\";\nimport ConversionBox from \"./ConversionBox\";\nimport ComparisonBox from \"./ComparisonBox\";\nimport { useTheme } from \"../context/ThemeContext\";\n\nconst Converter = ({ categoryId }) => {\n  const theme = useTheme();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [childUnits, setChildUnits] = useState([]);\n  const [realWorldItems, setRealWorldItems] = useState([]);\n  const [selectedUnits, setSelectedUnits] = useState([\"\", \"\", \"\"]);\n  const [selectedItems, setSelectedItems] = useState([\"\", \"\", \"\"]);\n  const [conversionToggles, setConversionToggles] = useState([false, false, false]);\n  const [comparisonToggles, setComparisonToggles] = useState([false, false, false]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const units = await pb.collection(\"units\").getFullList({ filter: `category=\"${categoryId}\"` });\n      const items = await pb.collection(\"real_world_items\").getFullList({ filter: `category=\"${categoryId}\"` });\n\n      // Sort childUnits normally (by name or any custom logic)\n      setChildUnits(units);\n\n      // Sort real-world items by scientific_value ASC\n      const sortedItems = [...items].sort((a, b) => (a.scientific_value ?? 0) - (b.scientific_value ?? 0));\n      setRealWorldItems(sortedItems);\n\n      // Pick first 3 sorted items for selection (use their IDs)\n      const initialComparisonIds = sortedItems.slice(0, 3).map((item) => item.id);\n      while (initialComparisonIds.length < 3) initialComparisonIds.push(\"\");\n\n      setSelectedItems(initialComparisonIds);\n      setSelectedUnits(units.slice(0, 3).map((u) => u.id)); // default first 3 units\n    };\n\n    fetchData();\n  }, [categoryId]);\n\n  const getConvertedValue = (toUnitId) => {\n    const fromUnit = childUnits[0]; // Assume input is always from first unit\n    const toUnit = childUnits.find((u) => u.id === toUnitId);\n    if (!fromUnit || !toUnit || !inputValue) return \"\";\n\n    const valueInBase = parseFloat(inputValue) * fromUnit.to_base_factor;\n    return valueInBase / toUnit.to_base_factor;\n  };\n\n  const getComparisonValue = (itemId) => {\n    const item = realWorldItems.find((i) => i.id === itemId);\n    if (!item || !inputValue || !item.approx_value) return \"\";\n    return parseFloat(inputValue) / item.approx_value;\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\" style={{ backgroundColor: theme?.container }}>\n      <InputSelector\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        units={childUnits}\n        selectedUnit={childUnits[0]}\n        theme={theme}\n      />\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        {selectedUnits.map((toUnitId, index) => (\n          <ConversionBox\n            key={index}\n            toUnitId={toUnitId}\n            index={index}\n            childUnits={childUnits}\n            getConvertedValue={getConvertedValue}\n            conversionToggles={conversionToggles}\n            setConversionToggles={setConversionToggles}\n            selectedUnits={selectedUnits}\n            setSelectedUnits={setSelectedUnits}\n            theme={theme}\n          />\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        {selectedItems.map((itemId, index) => (\n          <ComparisonBox\n            key={index}\n            index={index}\n            itemId={itemId}\n            realWorldItems={realWorldItems}\n            comparisonToggles={comparisonToggles}\n            setComparisonToggles={setComparisonToggles}\n            selectedItems={selectedItems}\n            setSelectedItems={setSelectedItems}\n            getComparisonValue={getComparisonValue}\n            theme={theme}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Converter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}