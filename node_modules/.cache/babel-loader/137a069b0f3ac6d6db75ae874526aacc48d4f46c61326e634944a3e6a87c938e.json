{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY COMPUTER SERVICES\\\\unit-converter-app\\\\client\\\\src\\\\components\\\\RealWorldBox.jsx\";\nimport React from \"react\";\nimport { formatNumber } from \"../utils/formatNumber\";\n\n// Helper to parse approx_value which can be number or { mantissa, exponent }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction parseApproxValue(val) {\n  if (val == null) return null;\n  if (typeof val === \"number\") return val;\n  if (typeof val === \"object\") {\n    if (\"mantissa\" in val && \"exponent\" in val) {\n      return val.mantissa * Math.pow(10, val.exponent);\n    }\n    return NaN;\n  }\n  const n = Number(val);\n  return isNaN(n) ? null : n;\n}\nfunction RealWorldBox({\n  selected,\n  setSelected,\n  items = [],\n  scientificToggle = true\n}) {\n  const safeItems = Array.isArray(items) ? items : [];\n\n  // Sort items by approx_value numeric; infinite or null last\n  const sortedItems = [...safeItems].sort((a, b) => {\n    const aVal = parseApproxValue(a.approx_value);\n    const bVal = parseApproxValue(b.approx_value);\n    const aNum = aVal == null || isNaN(aVal) ? Infinity : aVal;\n    const bNum = bVal == null || isNaN(bVal) ? Infinity : bVal;\n    return aNum - bNum;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-y-auto max-h-[300px] pr-1 flex flex-col gap-3\",\n    style: {\n      overflowX: \"hidden\"\n    },\n    children: sortedItems.map(item => {\n      var _item$expand, _item$expand$unit;\n      const isSelected = (selected === null || selected === void 0 ? void 0 : selected.id) === item.id;\n      const approxValParsed = parseApproxValue(item.approx_value);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setSelected === null || setSelected === void 0 ? void 0 : setSelected(item),\n        role: \"button\",\n        tabIndex: 0,\n        onKeyDown: e => {\n          if (e.key === \"Enter\" || e.key === \" \") setSelected === null || setSelected === void 0 ? void 0 : setSelected(item);\n        },\n        className: `cursor-pointer border p-3 rounded shadow-sm ${isSelected ? \"bg-blue-50 border-blue-400\" : \"bg-white\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold text-blue-800 text-center\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mt-1 flex justify-between text-blue-600 font-mono\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.scientific_value != null ? formatNumber(item.scientific_value, true) : \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.expression ? /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: item.expression\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this) : approxValParsed != null && !isNaN(approxValParsed) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [formatNumber(approxValParsed, false, true), \" \", (item === null || item === void 0 ? void 0 : (_item$expand = item.expand) === null || _item$expand === void 0 ? void 0 : (_item$expand$unit = _item$expand.unit) === null || _item$expand$unit === void 0 ? void 0 : _item$expand$unit.symbol) || \"\"]\n            }, void 0, true) : \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), item.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prose max-w-none text-xs text-gray-500 italic mt-2 text-center\",\n          dangerouslySetInnerHTML: {\n            __html: item.notes\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = RealWorldBox;\nexport default RealWorldBox;\nvar _c;\n$RefreshReg$(_c, \"RealWorldBox\");","map":{"version":3,"names":["React","formatNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","parseApproxValue","val","mantissa","Math","pow","exponent","NaN","n","Number","isNaN","RealWorldBox","selected","setSelected","items","scientificToggle","safeItems","Array","isArray","sortedItems","sort","a","b","aVal","approx_value","bVal","aNum","Infinity","bNum","className","style","overflowX","children","map","item","_item$expand","_item$expand$unit","isSelected","id","approxValParsed","onClick","role","tabIndex","onKeyDown","e","key","name","fileName","_jsxFileName","lineNumber","columnNumber","scientific_value","expression","dangerouslySetInnerHTML","__html","expand","unit","symbol","notes","_c","$RefreshReg$"],"sources":["C:/Users/MY COMPUTER SERVICES/unit-converter-app/client/src/components/RealWorldBox.jsx"],"sourcesContent":["import React from \"react\";\nimport { formatNumber } from \"../utils/formatNumber\";\n\n// Helper to parse approx_value which can be number or { mantissa, exponent }\nfunction parseApproxValue(val) {\n  if (val == null) return null;\n\n  if (typeof val === \"number\") return val;\n\n  if (typeof val === \"object\") {\n    if (\"mantissa\" in val && \"exponent\" in val) {\n      return val.mantissa * Math.pow(10, val.exponent);\n    }\n    return NaN;\n  }\n\n  const n = Number(val);\n  return isNaN(n) ? null : n;\n}\n\nfunction RealWorldBox({ selected, setSelected, items = [], scientificToggle = true }) {\n  const safeItems = Array.isArray(items) ? items : [];\n\n  // Sort items by approx_value numeric; infinite or null last\n  const sortedItems = [...safeItems].sort((a, b) => {\n    const aVal = parseApproxValue(a.approx_value);\n    const bVal = parseApproxValue(b.approx_value);\n\n    const aNum = aVal == null || isNaN(aVal) ? Infinity : aVal;\n    const bNum = bVal == null || isNaN(bVal) ? Infinity : bVal;\n\n    return aNum - bNum;\n  });\n\n  return (\n    <div\n      className=\"overflow-y-auto max-h-[300px] pr-1 flex flex-col gap-3\"\n      style={{ overflowX: \"hidden\" }}\n    >\n      {sortedItems.map((item) => {\n        const isSelected = selected?.id === item.id;\n\n        const approxValParsed = parseApproxValue(item.approx_value);\n\n        return (\n          <div\n            key={item.id}\n            onClick={() => setSelected?.(item)}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" || e.key === \" \") setSelected?.(item);\n            }}\n            className={`cursor-pointer border p-3 rounded shadow-sm ${\n              isSelected ? \"bg-blue-50 border-blue-400\" : \"bg-white\"\n            }`}\n          >\n            {/* Row 1: Item Name */}\n            <div className=\"font-semibold text-blue-800 text-center\">{item.name}</div>\n\n            {/* Row 2: Scientific and approx/expression */}\n            <div className=\"text-sm mt-1 flex justify-between text-blue-600 font-mono\">\n              <span>\n                {item.scientific_value != null\n                  ? formatNumber(item.scientific_value, true)\n                  : \"...\"}\n              </span>\n\n              <span>\n                {item.expression ? (\n                  <span\n                    dangerouslySetInnerHTML={{ __html: item.expression }}\n                  />\n                ) : approxValParsed != null && !isNaN(approxValParsed) ? (\n                  <>\n                    {formatNumber(approxValParsed, false, true)}{\" \"}\n                    {item?.expand?.unit?.symbol || \"\"}\n                  </>\n                ) : (\n                  \"...\"\n                )}\n              </span>\n            </div>\n\n            {/* Row 3: Notes (rich text) */}\n            {item.notes && (\n              <div\n                className=\"prose max-w-none text-xs text-gray-500 italic mt-2 text-center\"\n                dangerouslySetInnerHTML={{ __html: item.notes }}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default RealWorldBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}